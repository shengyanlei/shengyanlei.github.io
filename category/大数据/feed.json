{
    "version": "https://jsonfeed.org/version/1",
    "title": "碎念随风 • All posts by \"大数据\" category",
    "description": "人海未见之时，我亦独行在这城市。 料峭，春醒，酷暑，骤雨，寒意四起，大雁南飞，而后，大雪，寒风， 斗转星移，人间寒暑。",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/05/23/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/Flink%E7%9A%84%E7%AA%97%E5%8F%A3/",
            "url": "http://example.com/2024/05/23/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/Flink%E7%9A%84%E7%AA%97%E5%8F%A3/",
            "title": "Flink的窗口",
            "date_published": "2024-05-23T02:36:44.000Z",
            "content_html": "<h4 id=\"一-为什么需要窗口\"><a class=\"markdownIt-Anchor\" href=\"#一-为什么需要窗口\">#</a> 一、为什么需要窗口？</h4>\n<p>在 Flink 中，流是一个无界数据集，当我们需要在流中进行一些聚合运算时，比如统计最近 30 秒的请求量或者异常次数，然后根据请求或者异常次数采取相应措施。无论是从时间还是空间上，在流中做聚合计算都不现实。所以必须将聚合计算回归到有界数据集上，因此 Flink 引入了窗口来作为框定一个有限数据集，窗口将流拆分成有限大小的 “桶”，允许开发者在这些桶中做聚合计算。Flink 的窗口可以是时间驱动（Time Window），也可以是事件驱动 (Event Window)。</p>\n<h4 id=\"二-基本概念\"><a class=\"markdownIt-Anchor\" href=\"#二-基本概念\">#</a> 二、 基本概念</h4>\n<p>窗口化的流处理程序一般有两种结构，第一种结构是基于分组的窗口化数据流，第二种结构基于非分组的窗口化数据流。这两种结构的唯一区别是分组的数据流调用 KeyBy 操作符和 Window 操作符，而非分组的窗口化数据流仅调用 WindowAll 操作符。</p>\n<h4 id=\"三-window分组windowall非分组对比\"><a class=\"markdownIt-Anchor\" href=\"#三-window分组windowall非分组对比\">#</a> 三、 Window（分组），WindowAll（非分组）对比</h4>\n<ol>\n<li><strong>Window：</strong>  将在已经分区的 KeyedStream 中定义一个窗口，窗口根据某些特征将具有相同 key 的数据分为一组，（例如最近 5 秒到达的数据）。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>stream</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyby</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 根据指定的key将数据流中的数据进行分区</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>                   <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 必选：“窗口分配器”</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“窗口触发器”（默认使用各窗口分配器内置的触发器实现）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">evictor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“窗口剔除器”（默认没有实现）</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">allowedLateness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“窗口接受迟到的元素的最大时间”（默认为<span class=\"token number\">0</span>）</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">sideOutputLateData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>     <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“侧端输出标签”</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span>将窗口中迟到的数据发送到给定的<span class=\"token class-name\">OutPutTag</span>标识的侧端输出，默认窗口中迟到元素没有侧端输出<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">.</span>reduce<span class=\"token operator\">/</span>aggregate<span class=\"token operator\">/</span>fold<span class=\"token operator\">/</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 必选：“窗口函数”</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSideOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>             <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“侧端输出”</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">(</span>使用给定的<span class=\"token class-name\">OutputTag</span>获取一个<span class=\"token class-name\">DataStream</span>，其中包含操作符发送到侧端输出的元素<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><strong>WindowAll：</strong> 在常规的 DataStream 中调用 WIndowAll 操作符来定义一个窗口，窗口会根据某些特征对所有流数据进行分组。注：在大部分情况下使用 WIndowAll 操作符并不是并行转换，所有上游操作符发送的元素都将被收集在 WindowAll 操作符的任务中。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token namespace\">stream</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">.</span></span>WindowAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 必选：“窗口分配器”</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“窗口触发器”（默认使用各窗口分配器内置的触发器实现）</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">evictor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“窗口剔除器”（默认没有实现）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">allowedLateness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“窗口接受迟到的元素的最大时间”（默认为<span class=\"token number\">0</span>）</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">sideOutputLateData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>     <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“侧端输出标签”</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">(</span>将窗口中迟到的数据发送到给定的<span class=\"token class-name\">OutPutTag</span>标识的侧端输出，默认窗口中迟到元素没有侧端输出<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">.</span>reduce<span class=\"token operator\">/</span>aggregate<span class=\"token operator\">/</span>fold<span class=\"token operator\">/</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 必选：“窗口函数”</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSideOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>             <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> 可选：“侧端输出”</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">(</span>使用给定的<span class=\"token class-name\">OutputTag</span>获取一个<span class=\"token class-name\">DataStream</span>，其中包含操作符发送到侧端输出的元素<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"四-窗口的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#四-窗口的生命周期\">#</a> 四、 窗口的生命周期</h4>\n<p>在数据流中定义好一个窗口后，当属于某个窗口的第一元素到达时，该窗口就会创建，当时间（事件时间或处理时间）超过该窗口的结束时间戳加用户指定的允许延迟时间的总和后，该窗口将被完全删除。此外每个窗口都带有一个 trigger（触发器）和一个窗口函数 ProcessWindowFunction、ReduceFunction、AggregateFunction 等。窗口函数包含要应用于窗口中元素的计算逻辑，而触发器则是确定窗口何时该被窗口函数处理。触发的策略可能类似于 “当元素超过 4 个” 或者 “当水印经过窗口末端” 等。</p>\n<p>初此之外，Flink 还允许开发者指定一个 Evictor，它能够在触发器触发之后，窗口函数应用于窗口之前和 / 或之后从窗口中删除某些元素。</p>\n<h4 id=\"五-窗口分配器\"><a class=\"markdownIt-Anchor\" href=\"#五-窗口分配器\">#</a> 五、 窗口分配器</h4>\n<ol>\n<li>\n<p><strong>作用：</strong> 窗口分配器负责将每个传入的元素按照某种方式分配给一个或多个窗口。Flink 为最常见的几种应用场景（滚动窗口，滑动窗口，会话窗口，全局窗口）提供了预定义的以简化流处理程序的开发。还可以实现 windowAssigner 抽象类实现自定义窗口分配器。<br><font color=\"red\">注：所有预定义的窗口分配器除了全局窗口可以基于数据驱动的（根据元素数量来划分窗口），其它类型的窗口都是基于时间驱动的（窗口有一个开始时间戳（包括），和一个结束时间戳（不包括），共同描述窗口的大小）。这个时间可以是处理时间，也可以是事件时间。</font></p>\n</li>\n<li>\n<p><strong>分类：</strong></p>\n<ol>\n<li>滚动窗口（Tumbling Window）: 将每个元素分配给指定<em>窗口大小</em>的窗口。 滚动窗口具有固定大小，不重叠。</li>\n</ol>\n<p><img data-src=\"https://note.youdao.com/yws/api/personal/file/WEB541f48889a10adf9f3032f3d0e926546?method=download&amp;shareKey=45840225aaf794b9e53e1e9f61ef4e04\" alt=\"滚动窗口（官网截图）\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">DataStream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// tumbling event-time windows</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TumblingEventTimeWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// tumbling processing-time windows</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TumblingProcessingTimeWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// daily tumbling event-time windows offset by -8 hours.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TumblingEventTimeWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">days</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">hours</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>示例代码参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoZW5neWFubGVpL0ZsaW5rLWRlbW8vYmxvYi9tYXN0ZXIvc3JjL21haW4vamF2YS9jb20vc2h5bC93aW5kb3cvVHVtYmxpbmdXaW5kb3cuamF2YQ==\"> github 地址</span></p>\n<ol start=\"2\">\n<li>滑动窗口（Sliding Window）: 将元素分配给固定长度的窗口，窗口的大小由 TIme 配置。除此之外，滑动窗口分配器还提供一个参数用于控制滑动窗口的滑动间隙如果滑动窗口的大小小于滑动间隙，则滑动窗口可能会重叠。</li>\n</ol>\n<p><img data-src=\"https://note.youdao.com/yws/api/personal/file/WEB99b6c5a9a2016dd99149bccfa73be1a3?method=download&amp;shareKey=dda4994966ef5c308b371fe338e01f28\" alt=\"滑动窗口(官网截图)\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">DataStream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// sliding event-time windows</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SlidingEventTimeWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// sliding processing-time windows</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SlidingProcessingTimeWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// sliding processing-time windows offset by -8 hours</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SlidingProcessingTimeWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">hours</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">hours</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">hours</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>源码：第一次启动的窗口大小</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TimeWindow</span><span class=\"token punctuation\">></span></span> windows <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">/</span> slide<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>示例代码参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoZW5neWFubGVpL0ZsaW5rLWRlbW8vYmxvYi9tYXN0ZXIvc3JjL21haW4vamF2YS9jb20vc2h5bC93aW5kb3cvU2xpZGluZ1dpbmRvdy5qYXZh\"> github 地址</span></p>\n<ol start=\"3\">\n<li>会话窗口（Session Window）：会话窗口分配器根据活动的会话对元素进行分组，与滚动窗口和滑动窗口相反，会话窗口既不会重叠，也没有固定的开始时间和结束时间。当会话窗口在一段时间内没有收到元素时，他就会关闭。会话窗口分配器既可以配置静态间隙，也可以通过会话间隙提取器函数来配置动态会话间隙。</li>\n</ol>\n<p><img data-src=\"https://note.youdao.com/yws/api/personal/file/WEB0f96c93e39bd90b3e06560e4e7c5172e?method=download&amp;shareKey=e81c3788e7db5aa0252200082778abf8\" alt=\"会话窗口（官网截图）\"></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">DataStream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// event-time session windows with static gap</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EventTimeSessionWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">withGap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">minutes</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// event-time session windows with dynamic gap</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EventTimeSessionWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">withDynamicGap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// determine and return session gap</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// processing-time session windows with static gap</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProcessingTimeSessionWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">withGap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Time</span><span class=\"token punctuation\">.</span><span class=\"token function\">minutes</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// processing-time session windows with dynamic gap</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProcessingTimeSessionWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">withDynamicGap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// determine and return session gap</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>示例代码参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoZW5neWFubGVpL0ZsaW5rLWRlbW8vYmxvYi9tYXN0ZXIvc3JjL21haW4vamF2YS9jb20vc2h5bC93aW5kb3cvU2Vzc2lvbldpbmRvdy5qYXZh\"> github 地址</span></p>\n<ol start=\"4\">\n<li>全局窗口（Global Window)：Flink 中的窗口既可以是时间驱动的，也可以是事件驱动的。全局窗口就是被事件驱动的（这里不太准确，你可以实现自定义的触发器支持时间）全局窗口分配器将具有相同 key 的所有元素分配给一个全局窗口。要使全局窗口模式可用，还必须为该窗口指定触发器，否则触发器不执行任何计算，这是因为全局窗口没有可以处理聚合元素的自然终点。例如指定一个大小为 3 个元素的窗口，每当窗口中的元素达到 3 个就会开启一个新的窗口。</li>\n</ol>\n<p><img data-src=\"https://note.youdao.com/yws/api/personal/file/WEBaa23b8a0d4d83796122798ba80b61a89?method=download&amp;shareKey=e81c3788e7db5aa0252200082778abf8\" alt=\"全局窗口（官网截图）\"></p>\n</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">DataStream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>input</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>key selector<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GlobalWindows</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>windowed transformation<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>window function<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>示例代码参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoZW5neWFubGVpL0ZsaW5rLWRlbW8vYmxvYi9tYXN0ZXIvc3JjL21haW4vamF2YS9jb20vc2h5bC93aW5kb3cvR2xvYmFsV2luZG93LmphdmE=\"> github 地址</span></p>\n<h4 id=\"六-窗口函数\"><a class=\"markdownIt-Anchor\" href=\"#六-窗口函数\">#</a> 六、窗口函数</h4>\n<p>在窗口分配器生成窗口后，需要为每个窗口指定在该窗口中执行的计算策略。这就是窗口函数的职责。一旦系统确定一个窗口以准备好进行处理，窗口函数将用于处理每个（也可能是键控）的窗口中的每个元素。</p>\n<ol>\n<li>\n<p><strong>RecuceFunction</strong></p>\n<ol>\n<li><strong>作用：</strong>  reduce 操作符应用于用户定义的 ReduceFunction 窗口函数将一个窗口内的元素组合为单个值，而且总是将两个元素合并为一个元素，具体细节为将上一个合并过的值和当前输入的元素结合，产生新的值并发出。ReduceFunction 窗口函数会连续应用于同一个窗口内的所有值，知道仅剩一个值为止。</li>\n<li><strong>数据流转换：</strong>  WindowedStream -&gt; DataStream /AllWindowedStream -&gt; DataStream</li>\n<li><strong>应用场景：</strong></li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>windowedStream<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReduceFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> function<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<h5 id=\"flodfunction当前版本删除\"><a class=\"markdownIt-Anchor\" href=\"#flodfunction当前版本删除\">#</a> FlodFunction：(当前版本删除)</h5>\n<ol>\n<li><strong>作用：</strong> 将用户定义的 FlodFuction 窗口函数指定如何将窗口的输入元素与输出类型的元素进行组合，添加到窗口的第一个元素将与输出类型的预定义的初始值进行组合。用户定义 FlodFunction 窗口函数的核心逻辑是将输入值和当前输出类型的值组合为一个指定输出类型的值。FlodFunction 窗口函数会连续应用于同一个窗口内的所有值，知道仅剩一个值为止。</li>\n<li>** 数据流转换：**WindowedStream -&gt; DataStream /AllWindowedStream -&gt; DataStream</li>\n<li><strong>应用场景：</strong></li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>windowedStream<span class=\"token punctuation\">.</span><span class=\"token function\">fold</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span> initialValue<span class=\"token punctuation\">,</span><span class=\"token class-name\">FoldFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> function<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<h5 id=\"aggregatefunction\"><a class=\"markdownIt-Anchor\" href=\"#aggregatefunction\">#</a> AggregateFunction：</h5>\n<ol>\n<li><strong>作用：</strong> 应用用户定义的 AggregateFunction 窗口函数对窗口内的元素进行聚合计算。AggregateFunction 是 ReduceFunction 的广义版本，它有三种类型：输入类型（汇总值的类型，IN)、累加器类型（中间聚合状态 ACC）和输出类型（汇总结果的类型，OUT），相比 ReduceFunction 窗口函数，AggregateFunction 窗口函数可以为聚合计算的输入值，中间聚合值，和结果值使用不同的类型，以支持更广泛的聚合类型。为了简化开发者对于 AggregateFunction 窗口函数的使用，提供了一些预定义的实现逻辑，可以对一个窗口内的元素进行求和，求最大值，最小值等。</li>\n<li>** 数据流转换：**WindowedStream -&gt; DataStream /AllWindowedStream -&gt; DataStream</li>\n<li><strong>应用场景：</strong></li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>windowStream<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AggregateFunction</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span>ACC<span class=\"token punctuation\">,</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> function<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"5\">\n<li><strong>AggregateFunction 接口</strong>\n<ol>\n<li>ACC createAccumulator () : 该方法将创建一个新的累加器以执行一个新的聚合操作。除非通过 add（…）方法添加值，否则创建新的累加器通常没有意义，累加器时正在执行聚合操作中的状态。</li>\n<li>ACC add (IN value,ACC accumulator): 该方法将给定的输入值添加到给定的累加器中，并返回新的累加器值。</li>\n<li>OUT getResult (ACC accumulator): 该方法将从累加器中获取聚合的结果。</li>\n<li>ACC merge (ACC a,ACC b): 该方法将合并两个累加器，返回一个具有合并状态的累加器。该方法可以重用任何给定的累加器作为合并的目标并返回。</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<h5 id=\"processwindowfunctionprocessallwindowfunction\"><a class=\"markdownIt-Anchor\" href=\"#processwindowfunctionprocessallwindowfunction\">#</a> ProcessWindowFunction/ProcessAllWindowFunction</h5>\n<ol>\n<li><strong>作用：</strong> process 操作符应用用户定义的 ProcessWindowFunction 和 ProcessAllWindowFunction 窗口函数对窗口内的元素进行计算，这两个窗口函数会获取一个包含窗口所有元素的迭代器，以及一个可以访问窗口和状态信息的上下文对象，因此这两个窗口函数具有比其他窗口函数更大的灵活性。但是以消耗性能和资源为代价的，因为窗口内的元素不能增量的聚合，需要在内部进行缓冲，直到认为窗口已经准备好进行处理，所以当开发者使用这两个函数时需要充分考虑内存的占用情况。</li>\n<li>** 数据流转换：**WindowedStream -&gt; DataStream /AllWindowedStream -&gt; DataStream</li>\n<li><strong>应用场景：</strong></li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>windowedStream<span class=\"token punctuation\">.</span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProcessWindowFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">W</span><span class=\"token punctuation\">></span></span> function<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>类型参数：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> – 输入值的类型。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> – 输出值的类型。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> – 密钥的类型。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">W</span><span class=\"token punctuation\">></span></span> – 可以应用此窗口函数的 <span class=\"token class-name\">Window</span> 类型。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">AllWindowedStream</span><span class=\"token punctuation\">.</span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProcessAllWindowFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">W</span><span class=\"token punctuation\">></span></span> function<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<h5 id=\"增量聚合的processwindowfunctionprocessallwindowfunction\"><a class=\"markdownIt-Anchor\" href=\"#增量聚合的processwindowfunctionprocessallwindowfunction\">#</a> 增量聚合的 ProcessWindowFunction/ProcessAllWindowFunction</h5>\n<ol>\n<li><strong>作用：</strong> ProcessWindowFunction 或 ProcessAllWindowFunction 可以和 ReduceFunction、AggregateFunction、FoldFunction 组合使用，以便在元素到达窗口时增量的聚合它们。当窗口关闭时，ProcessWindowFunction 或 ProcessAllWindowFunction 将提供聚合的结果。这允许开发者在访问 ProcessWindowFunction 或 ProcessAllWindowFunction 提供的窗口元素据的同时可以对窗口内的元素进行增量的聚合计算。</li>\n<li>** 数据流转换：**WindowedStream -&gt; DataStream /AllWindowedStream -&gt; DataStream</li>\n<li><strong>应用场景：</strong></li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ReduceFunction</span> 和 <span class=\"token class-name\">ProcessWindowFunction</span>组合</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>windowedStream<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">ReduceFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> reduceFunction</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">ProcessWindowFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">W</span><span class=\"token punctuation\">></span></span> function<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">ReduceFunction</span> 和 <span class=\"token class-name\">ProcessAllWindowFunction</span>组合</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">AllWindowedStream</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">ReduceFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> reduceFunction</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">ProcessAllWindowFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">W</span><span class=\"token punctuation\">></span></span> function<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"七-窗口触发器\"><a class=\"markdownIt-Anchor\" href=\"#七-窗口触发器\">#</a> 七、窗口触发器</h4>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/05/17/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/flink%E7%AE%97%E5%AD%90%E6%80%BB%E7%BB%93/",
            "url": "http://example.com/2024/05/17/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/flink%E7%AE%97%E5%AD%90%E6%80%BB%E7%BB%93/",
            "title": "flink算子总结",
            "date_published": "2024-05-17T02:25:29.000Z",
            "content_html": "<p>前言： Flink 提供了丰富的算子来方便开发者处理各种应用场景。</p>\n<h4 id=\"一-基本转换类算子\"><a class=\"markdownIt-Anchor\" href=\"#一-基本转换类算子\">#</a> 一、基本转换类算子</h4>\n<ol>\n<li>\n<h5 id=\"map\"><a class=\"markdownIt-Anchor\" href=\"#map\">#</a> Map：</h5>\n<ol>\n<li><strong>作用</strong>：将用户定义的 MapFunction 函数应用于数据流中的每个元素。数据流中的每个元素将作为输入元素进入用户定义的 MapFunction 函数，MapFunction 函数将对输入的元素进行转换并产生一个结果元素输出到新的数据流中。</li>\n<li>** 数据流转换：**DataStream -&gt; DataStream。</li>\n<li>** 应用场景：** 解析元素，转换数据类型。</li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n<li>\n<h5 id=\"flatmap\"><a class=\"markdownIt-Anchor\" href=\"#flatmap\">#</a> FlatMap：</h5>\n<ol>\n<li>** 作用：** 将用户定义的 FlatMapFunction 函数应用于数据流中的每一个元素，数据流中的每个元素将作为输入元素进入 FlatMapFunction 函数，FlatMapFunction 函数将对输入的元素进行转换并产生 0 个，1 个，或者多个结果元素输出到新的数据流中。</li>\n<li>** 数据流转换：**DataStream -&gt; DataStream。</li>\n<li>** 应用场景：** 拆分不需要的列表和数组。</li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n<li>\n<h5 id=\"filter\"><a class=\"markdownIt-Anchor\" href=\"#filter\">#</a> Filter：</h5>\n<ol>\n<li>** 作用：** 将用户定义的 FilterFunction 函数应用于数据流中的每个元素。数据流中的每个元素将作为输入元素进入 FilterFunction 函数，FilterFunction 函数对输入的元素进行判断来决定保留该元素还是丢弃该元素，返回 true 代表保留，返回 false 代表丢弃。</li>\n<li>** 数据流转换：**DataStream -&gt; DataStream。</li>\n<li>** 应用场景：** 数据去重</li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n<li>\n<h5 id=\"keyby\"><a class=\"markdownIt-Anchor\" href=\"#keyby\">#</a> KeyBy：</h5>\n<ol>\n<li>** 作用：**KeyBy 操作符的执行逻辑是将一个数据流分成不相交的流分区（分区数量和并行度一致），所有具有相同 Key 的元素都被分配到相同的流分区，在 keyby 操作符内部通过散列算法来划分元素到对应的流分区。</li>\n<li>** 数据流转换：**DataStream -&gt; KeyedStream。</li>\n<li>** 应用场景：** 聚合、状态管理、窗口操作</li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n<li>\n<h5 id=\"reduce\"><a class=\"markdownIt-Anchor\" href=\"#reduce\">#</a> Reduce：</h5>\n<ol>\n<li>** 作用：**Reduce 操作符应用用户定义的 ReduceFunction 函数将 KeyedStream 中具有相同 Key 元素合并为单个值，而且总是将两个元素合并为一个元素，具体细节为将上一个合并过的值和当前输入的元素结合，产生新的值发出。Reduce 操作符将 ReduceFunction 函数连续应用于同一个组的所有值，直到仅剩一个值为止。</li>\n<li>** 数据流转换：**KeyedStream -&gt; DataStream。</li>\n<li>** 应用场景：** 聚合计算</li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n</ol>\n<h4 id=\"二-聚合算子\"><a class=\"markdownIt-Anchor\" href=\"#二-聚合算子\">#</a> 二、聚合算子</h4>\n<ol>\n<li>\n<h5 id=\"aggregations\"><a class=\"markdownIt-Anchor\" href=\"#aggregations\">#</a> aggregations</h5>\n<ol>\n<li>\n<p>** 作用：** 提供一系列内置的聚合逻辑，可以对 KeyStream 中具有相同 Key 的元素进行求和，求最大值或最小值等。提供两种方式对具有相同 key 的元素进行聚合计算。对于 POJO 类型的元素可以通过指定字段名称来指定聚合字段，对于元组类型的元素可以通过指定元素的索引来指定聚合字段。</p>\n</li>\n<li>\n<p>** 数据流转换：**KeyedStream-&gt; DataStream</p>\n</li>\n<li>\n<p><strong>分类：</strong></p>\n<ol>\n<li>**sum：** 返回同一个 Key 分组下指定字段的和。</li>\n<li>**min：** 返回同一个 key 分组下指定字段的最小值。</li>\n<li>**minby：** 返回同一个 key 分组下指定字段中具有最小值的元素。</li>\n<li>**max：** 返回同一个 key 分组下指定字段的最大值。</li>\n<li>**maxby：** 返回同一个 key 分组下指定字段中具有最大值的元素。</li>\n</ol>\n<p><font color=\"red\">注：类似关系型数据的 SQL 语法，Min 是取字段的最小值，MinBy 是取字段最小的一整行数据（max 同理）。</font></p>\n</li>\n<li>\n<p><strong>应用场景：</strong></p>\n</li>\n<li>\n<p><strong>代码示例：</strong></p>\n</li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n</ol>\n<h4 id=\"三-数据流操作算子\"><a class=\"markdownIt-Anchor\" href=\"#三-数据流操作算子\">#</a> 三、数据流操作算子</h4>\n<ol>\n<li>\n<h5 id=\"keyby前面介绍过\"><a class=\"markdownIt-Anchor\" href=\"#keyby前面介绍过\">#</a> keyBY（前面介绍过）</h5>\n</li>\n<li>\n<p><strong>Split 和 Select（后续版本删除，作者使用版本为 1.14）：</strong></p>\n<ol>\n<li>\n<p>** 作用：** 这两个操作符通常是组合使用的，Split 操作符根据用户定义的标准将数据流拆分为两个或者更多的数据流，Select 操作符根据用户定义的标准获取对应的数据流，以便在获取的数据流中执行后续的转换操作。</p>\n</li>\n<li>\n<p>** 数据流转换：**split：DataStream -&gt; SplitStream <br>                      select：SplitStream -&gt; DataStream</p>\n</li>\n<li>\n<p>** 应用场景：** 切分数据流，获取数据流</p>\n</li>\n<li>\n<p><strong>代码示例：</strong></p>\n</li>\n</ol>\n<pre><code class=\"language-java\">   \n</code></pre>\n</li>\n<li>\n<h5 id=\"project\"><a class=\"markdownIt-Anchor\" href=\"#project\">#</a> Project</h5>\n<ol>\n<li>** 作用：**Project 操作符作用在元素的数据类型是元组的数据流中，它根据指定的索引从元组中选择对应的字段组成一个子集。该操作符的参数是一个变长参数，类型为 Int。参数指定保留的输入元组的字段索引，输出元组的字段顺序与字段索引的顺序相对应。</li>\n<li>** 数据流转换：**DataStream -&gt;DataStream</li>\n<li>** 应用场景：** 按元组索引创建新流</li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n<li>\n<h5 id=\"union\"><a class=\"markdownIt-Anchor\" href=\"#union\">#</a> Union</h5>\n<ol>\n<li>** 作用：**Union 操作符负责将两个或者多个<font color=\"red\">相同类型的数据流</font>进行合并来创建一个包含数据流中所有元素的新数据流。该操作符的参数是一个变长参数，可以支持合并多个相同类型的数据流.</li>\n<li>** 数据流转换：**DataStream -&gt; DataStream</li>\n<li>** 应用场景：** 合并不同数据源相同数据类型的数据流</li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n<li>\n<h5 id=\"connect\"><a class=\"markdownIt-Anchor\" href=\"#connect\">#</a> Connect</h5>\n<ol>\n<li>** 作用：** 连接两个保留其类型的数据流创建新的连接流，从而允许这两个数据流共享状态。</li>\n<li>** 数据流转化：**DataStream+DataStream -&gt; ConnectedStream</li>\n<li><strong>应用场景：</strong></li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n<li>\n<h5 id=\"comapcoflatmap\"><a class=\"markdownIt-Anchor\" href=\"#comapcoflatmap\">#</a> CoMap,CoFlatMap</h5>\n<ol>\n<li><strong>作用：</strong>\n<ol>\n<li>CoMap：在 connectStream 中使用 Map 操作符将用户定义的 CoMapFunction 函数应用于 ConnectedStream 中的每个元素。数据流中的每个元素将作为输入元素进入 CoMapFunction 函数，对输入的元素进行转换并产生一个结果元素输出到新的数据流中。CoMapFunction 函数提供了 map1，map2 两种转换方式分别处理 connectStream 的两个不同类型的数据流。</li>\n<li>CoFlatMap：在 connectStream 中使用 FlatMap 操作符将用户定义的 CoFlatMapFunction 函数应用于 ConnectedStream 中的每个元素。数据流中的每个元素将作为输入元素进入 CoMapFunction 函数，对输入的元素进行转换并产生 0 个，1 个，或多个结果元素输出到新的数据流中。CoFlatMapFunction 函数提供了 flatmap1，flatmap2 两种转换方式分别处理 connectStream 的两个不同类型的数据流。</li>\n</ol>\n</li>\n<li>** 数据流转换：**ConnectedStream -&gt; DataStream</li>\n<li><strong>应用场景：</strong></li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n<li>\n<h5 id=\"iterate\"><a class=\"markdownIt-Anchor\" href=\"#iterate\">#</a> Iterate</h5>\n<ol>\n<li>** 作用：** 流处理程序的迭代计算实现了一个 Step 函数并将其嵌入 IterativeStream 类型的数据流，由于流处理程序可能永远不会完成，所以没有最大迭代次数。相反需要开发者指定数据流的那一部分被反馈回迭代操作中，以及那一部分使用 split 操作符或 filter 操作符转发到下游数据流。迭代操作将一个操作符的输出重定向到某个先前的操作符，在数据流中创建 “反馈” 循环。</li>\n<li>** 数据流转换：**DataStream -&gt; IterativeStream -&gt;DataStream</li>\n<li>** 应用场景：** 更新模型算法</li>\n<li><strong>代码示例：</strong></li>\n</ol>\n<pre><code class=\"language-java\">\n</code></pre>\n</li>\n</ol>\n<h4 id=\"四-窗口算子\"><a class=\"markdownIt-Anchor\" href=\"#四-窗口算子\">#</a> 四、窗口算子</h4>\n<p>有关窗口的介绍请参考文章<a href=\"\" style=\"display: inline;white-space: nowrap;\">Flink 的窗口</a></p>\n<h5 id=\"6代码示例\"><a class=\"markdownIt-Anchor\" href=\"#6代码示例\">#</a> 6. 代码示例</h5>\n<ol>\n<li>自定义数据源 (1 秒发送一条数据)</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>shyl<span class=\"token punctuation\">.</span>bean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span>tuple<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Tuple3</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataStreamSource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>environment<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StreamExecutionEnvironment</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SourceFunction</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoggerFactory</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleDateFormat</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Date</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SourceForWindow</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">SourceFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tuple3</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Logger</span> <span class=\"token constant\">LOG</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SourceForWindow</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">volatile</span> <span class=\"token keyword\">boolean</span> isRunning <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 发送元素间隔时间</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> sleepTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">WORDS</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token string\">\"shyl\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token string\">\"shyl\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token string\">\"shyl\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token string\">\"shyl\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token string\">\"shyl\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token string\">\"java\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token string\">\"flink\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token string\">\"flink\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token string\">\"flink\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token string\">\"shyl\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token string\">\"shyl\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token string\">\"hadoop\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token string\">\"hadoop\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token string\">\"spark\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SourceForWindow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> sleepTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sleepTime <span class=\"token operator\">=</span> sleepTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SourceContext</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tuple3</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>isRunning<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token class-name\">String</span> word <span class=\"token operator\">=</span> <span class=\"token constant\">WORDS</span><span class=\"token punctuation\">[</span>count <span class=\"token operator\">%</span> <span class=\"token constant\">WORDS</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token class-name\">String</span> time <span class=\"token operator\">=</span> <span class=\"token function\">getHHmmss</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token class-name\">Tuple3</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> tuple2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Tuple3</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span>tuple2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token constant\">LOG</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send data :\"</span> <span class=\"token operator\">+</span> tuple2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>sleepTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        isRunning <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getHHmmss</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token class-name\">SimpleDateFormat</span> sdf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HH:mm:ss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> sdf<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"时间:\"</span> <span class=\"token operator\">+</span> str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://note.youdao.com/yws/api/personal/file/WEB784f05b36e6fdd6006e67f3f701aa53b?method=download&amp;shareKey=07beb93234958c59db0138ad9d34bbdf\" alt=\"数据源截图\"></p>\n<ol start=\"2\">\n<li></li>\n</ol>\n<hr>\n<p class=\"note note-primary\">富函数:是Flink的高级操作符，将RichFunction接口成为富函数。所有的操作符上应用的函数都有富函数版本，只需要在各种函数类名前面加上Rich前缀即可。富函数在基本函数提供的操作方法之外额外提供了一系列方法方便开发者丰富自己的业务逻辑。<br>\n1.🔴void open():执行基本操作方法前的初始化方法，它在基本的操作方法第一次被调用之前调用，因此适合在方法中进行编写初始化资源等一次性设置工作。该方法可能会转发运行时捕获的异常，当运行时捕获异常时，它将中止任务，并根据指定的重启策略决定是否重试任务。<br>\n2.🔴void close():在最后一次调用基本的操作方法之后调用它，换句话说就是在Flink程序结束前被调用，主要用于释放程序中的资源，该方法也可能转发运行时捕获的异常。<br>\n3.🔴RuntimeContext getRuntimeContext():获取有关用户定义的函数运行时的上下文信息，例如函数的并行度，函数的子任务索引或者执行函数的任务名称。RuntimeContext还提供对累加器，分布式缓存，计数器，当前配置信息，<font color='red'>状态</font>等对象的访问。<br>\n4.IterationRuntimeContext getIterationRuntimeContext():获取RuntimeContext的专用版本，该版本具有有关执行函数迭代的其他信息。仅当函数是迭代的一部分时，此IterationRuntimeContext才可用，否则调用此方法将引发异常。<br>\n5.void setRuntimeContext(RuntimeContext t):设置函数运行时的上下文，将用户定义的函数应用于操作符的并行实例时由Flink框架自动调用。</p>\n",
            "tags": [
                "大数据",
                "Flink"
            ]
        },
        {
            "id": "http://example.com/2024/03/07/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93%E6%90%AD%E5%BB%BA/",
            "url": "http://example.com/2024/03/07/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93%E6%90%AD%E5%BB%BA/",
            "title": "实时数仓搭建",
            "date_published": "2024-03-07T05:52:09.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://example.com/2023/12/14/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/Flink%E7%9A%84%E4%B8%8D%E5%90%8Csource/",
            "url": "http://example.com/2023/12/14/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/Flink%E7%9A%84%E4%B8%8D%E5%90%8Csource/",
            "title": "Flink的不同source",
            "date_published": "2023-12-14T07:31:33.000Z",
            "content_html": "<ol>\n<li><strong>Elements</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataStreamSource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SingleOutputStreamOperator</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>environment<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StreamExecutionEnvironment</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> elements <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">StreamExecutionEnvironment</span> env <span class=\"token operator\">=</span> <span class=\"token class-name\">StreamExecutionEnvironment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutionEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        env<span class=\"token punctuation\">.</span><span class=\"token function\">setParallelism</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">DataStreamSource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> listSource <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">fromElements</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">SingleOutputStreamOperator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> listSource<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-></span> i <span class=\"token operator\">+</span> i <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        map<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        env<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from_Elements\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><strong>TextFile</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>shyl<span class=\"token punctuation\">.</span>source</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FlatMapFunction</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span>tuple<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Tuple2</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataStreamSource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SingleOutputStreamOperator</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>environment<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StreamExecutionEnvironment</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collector</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TextFile</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">StreamExecutionEnvironment</span> env <span class=\"token operator\">=</span> <span class=\"token class-name\">StreamExecutionEnvironment</span><span class=\"token punctuation\">.</span><span class=\"token function\">createLocalEnvironmentWithWebUI</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">DataStreamSource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> source <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">readTextFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"F:\\\\BigData\\\\Flink1.4\\\\input\\\\1.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setParallelism</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">SingleOutputStreamOperator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tuple2</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> flatmap <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FlatMapFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Tuple2</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Collector</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tuple2</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> collector<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> key <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s1 <span class=\"token operator\">:</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    collector<span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Tuple2</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">SingleOutputStreamOperator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tuple2</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> sum <span class=\"token operator\">=</span> flatmap<span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        sum<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        env<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TextFile\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><strong>socket</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>shyl<span class=\"token punctuation\">.</span>source</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MapFunction</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span>tuple<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Tuple2</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataStreamSource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SingleOutputStreamOperator</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>environment<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StreamExecutionEnvironment</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> socket <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">StreamExecutionEnvironment</span> env <span class=\"token operator\">=</span> <span class=\"token class-name\">StreamExecutionEnvironment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutionEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">DataStreamSource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> source <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">socketTextStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.52.201\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">SingleOutputStreamOperator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MapFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tuple2</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        map<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        env<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new socket\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li><strong>kafka</strong></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>shyl<span class=\"token punctuation\">.</span>source</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>eventtime<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WatermarkStrategy</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MapFunction</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span>tuple<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Tuple2</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span>tuple<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Tuple3</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataStreamSource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SingleOutputStreamOperator</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>environment<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StreamExecutionEnvironment</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>connectors<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FlinkKafkaConsumer</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>connectors<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FlinkKafkaConsumerBase</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>serialization<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleStringSchema</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Duration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Properties</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> kafka <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">StreamExecutionEnvironment</span> env <span class=\"token operator\">=</span> <span class=\"token class-name\">StreamExecutionEnvironment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutionEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//        创建 kafka 数据源的配置</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">Properties</span> properties <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bootstrap.servers\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"192.168.52.201:9092\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"group_id\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kafka_source\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 指定消费者读取的位置</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">FlinkKafkaConsumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> consumer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FlinkKafkaConsumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleStringSchema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">setStartFromEarliest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 尽可能从最早的记录开始</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">//        consumer.setStartFromLatest ();       // 从最新的记录开始</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">//        consumer.setStartFromTimestamp (); // 从指定的时间开始（毫秒）</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">//        consumer.setStartFromGroupOffsets (); // 默认的方法 从 Kafka brokers 中的 consumer 组（consumer 属性中的 group.id 设置）提交的偏移量中开始读取分区。 如果找不到分区的偏移量，那么将会使用配置中的 auto.offset.reset 设置。</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token class-name\">DataStreamSource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> kafkasource <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span>consumer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token class-name\">SingleOutputStreamOperator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> kafkasource<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MapFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tuple2</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        map<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        env<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kafka_source\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li><strong>jdbc</strong>：flink 没有对 mysql 直接提供支持 ，需要自定义数据源。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>shyl<span class=\"token punctuation\">.</span>source</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RichParallelSourceFunction</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JDBCSourceFromMysql</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">RichParallelSourceFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>base_dic<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">PreparedStatement</span> ps <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Connection</span> connection <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Configuration</span> parameters<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span>parameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        connection <span class=\"token operator\">=</span> <span class=\"token function\">getConnetion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from base_dic\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ps <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>connection<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getRuntimeContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getJobId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>connection <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            connection<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ps <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            ps<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SourceContext</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>base_dic<span class=\"token punctuation\">></span></span> sourceContext<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token class-name\">ResultSet</span> resultSet <span class=\"token operator\">=</span> ps<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            base_dic basedic <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">base_dic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            basedic<span class=\"token punctuation\">.</span><span class=\"token function\">setDic_code</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dic_code\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            basedic<span class=\"token punctuation\">.</span><span class=\"token function\">setDic_name</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dic_name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            basedic<span class=\"token punctuation\">.</span><span class=\"token function\">setParent_code</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"parent_code\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            basedic<span class=\"token punctuation\">.</span><span class=\"token function\">setCreate_time</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"create_time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            basedic<span class=\"token punctuation\">.</span><span class=\"token function\">setOperate_time</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"operate_time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            sourceContext<span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span>basedic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Connection</span> <span class=\"token function\">getConnetion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token class-name\">String</span> driver <span class=\"token operator\">=</span> <span class=\"token string\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:mysql://192.168.52.201:3306/gmall\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> <span class=\"token string\">\"1234kxmall!@#ABC\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token class-name\">Connection</span> con <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                con <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">return</span> con<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>​\t<strong>basc_inc 类</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>shyl<span class=\"token punctuation\">.</span>source</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> base_dic <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> dic_code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> dic_name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> parent_code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> create_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> operate_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">base_dic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDic_code</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> dic_code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setDic_code</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> dic_code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dic_code <span class=\"token operator\">=</span> dic_code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDic_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> dic_name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setDic_name</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> dic_name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dic_name <span class=\"token operator\">=</span> dic_name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getParent_code</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span> parent_code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setParent_code</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> parent_code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parent_code <span class=\"token operator\">=</span> parent_code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getCreate_time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">return</span> create_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCreate_time</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> create_time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>create_time <span class=\"token operator\">=</span> create_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getOperate_time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">return</span> operate_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setOperate_time</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> operate_time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>operate_time <span class=\"token operator\">=</span> operate_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"base_inc&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token string\">\"dic_code='\"</span> <span class=\"token operator\">+</span> dic_code <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token string\">\", dic_name='\"</span> <span class=\"token operator\">+</span> dic_name <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token string\">\", parent_code='\"</span> <span class=\"token operator\">+</span> parent_code <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token string\">\", create_time='\"</span> <span class=\"token operator\">+</span> create_time <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token string\">\", operate_time='\"</span> <span class=\"token operator\">+</span> operate_time <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>​\t<strong>jdbcSource</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>shyl<span class=\"token punctuation\">.</span>source</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MapFunction</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataStreamSource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>datastream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SingleOutputStreamOperator</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flink<span class=\"token punctuation\">.</span>streaming<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>environment<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StreamExecutionEnvironment</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JDBC</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">StreamExecutionEnvironment</span> env <span class=\"token operator\">=</span> <span class=\"token class-name\">StreamExecutionEnvironment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutionEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        env<span class=\"token punctuation\">.</span><span class=\"token function\">setParallelism</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">DataStreamSource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>base_dic<span class=\"token punctuation\">></span></span> mysqlSource <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">JDBCSourceFromMysql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">SingleOutputStreamOperator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> mysqlSource<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MapFunction</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>base_dic<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span>base_dic value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        map<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        env<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql_source\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"备注\"><a class=\"markdownIt-Anchor\" href=\"#备注\">#</a> 备注</h3>\n<p>以 flink1.4.4 版本为例，以下是 pom 文件</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.flink/flink-clients --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.flink<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>flink-clients_2.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.14.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.flink/flink-streaming-java --></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.flink<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>flink-streaming-java_2.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.14.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">&lt;!--            &lt;scope>provided&lt;/scope>--></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api --></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.slf4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>slf4j-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.7.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.flink/flink-runtime-web --></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.flink<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>flink-runtime-web_2.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.14.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">&lt;!--            &lt;scope>test&lt;/scope>--></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.flink<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>flink-connector-kafka_2.11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.14.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.flink/flink-connector-jdbc --></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.flink<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>flink-connector-jdbc_2.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.14.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">&lt;!--            &lt;scope>provided&lt;/scope>--></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j --></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mysql-connector-j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>8.0.31<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure>",
            "tags": [
                "大数据",
                "Flink"
            ]
        },
        {
            "id": "http://example.com/2023/12/06/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/Flink%E5%AD%A6%E4%B9%A0-%E4%B8%80/",
            "url": "http://example.com/2023/12/06/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/Flink%E5%AD%A6%E4%B9%A0-%E4%B8%80/",
            "title": "Flink学习(一)",
            "date_published": "2023-12-06T03:36:08.000Z",
            "content_html": "<h3 id=\"一-flink相关名词解析\"><a class=\"markdownIt-Anchor\" href=\"#一-flink相关名词解析\">#</a> 一、Flink 相关名词解析</h3>\n<ol>\n<li>DataStream API</li>\n<li>DataSet API</li>\n<li></li>\n</ol>\n<h3 id=\"二-flink程序剖析\"><a class=\"markdownIt-Anchor\" href=\"#二-flink程序剖析\">#</a> 二、FLink 程序剖析</h3>\n<p>Flink 程序看起来像是转换的常规程序。每程序由相同的基本部分组成： <code>DataStreams</code></p>\n<ol>\n<li>获取执行环境 ， <code>execution environment</code></li>\n<li>加载 / 创建初始数据，</li>\n<li>指定此数据的转换，</li>\n<li>指定计算结果的放置位置，</li>\n<li>触发程序执行</li>\n</ol>\n<p><em>执行环境方法：</em></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">getExecutionEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">createLocalEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">createRemoteEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> host<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> jarFiles<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><em>数据源：</em></p>\n<p>基于文件：</p>\n<ul>\n<li>\n<p><code>readTextFile(path)</code> - 逐行读取文本文件，即遵守规范的文件，并将它们作为字符串返回。``</p>\n</li>\n<li>\n<p><code>readFile(fileInputFormat, path)</code> - 根据指定的文件输入格式读取（一次）文件。</p>\n</li>\n<li>\n<p><code>readFile(fileInputFormat, path, watchType, interval, pathFilter, typeInfo)</code> - 这是前两个方法内部调用的方法。它根据给定的。根据所提供的 ，该源可以定期监视（每毫秒）新数据的路径（），或者处理当前路径中的数据并退出（）。使用 ，用户可以进一步排除正在处理的文件。``</p>\n<p><em>实现：</em></p>\n<p>在底层，Flink 将文件读取过程拆分为两个子任务，即<em>目录监控</em>和<em>数据读取</em>。这些子任务中的每一个都由一个单独的实体实现。监视由单个非并行（<strong>并行度</strong> = 1）任务实现，而读取由并行运行的多个任务执行。后者的并行度等于作业并行度。单个监控任务的作用是扫描目录（定期或仅扫描一次，具体取决于目录），找到需要处理的文件，将其<em>拆分</em>，并将这些拆分分配给下游读取器。读者是读取实际数据的人。每个拆分只能由一个读取器读取，而一个读取器可以逐个读取多个拆分。</p>\n<p><em>重要提示：</em></p>\n<ol>\n<li>如果 设置为 ，则在修改文件时，将完全重新处理其内容。这可能会破坏 “恰好一次” 的语义，因为在文件末尾附加数据将导致重新处理其<strong>所有</strong>内容。</li>\n<li>如果 设置为 ，则源扫描<strong>路径一次</strong>并退出，而无需等待读取器完成对文件内容的读取。当然，读者将继续阅读，直到读取所有文件内容。关闭源会导致在此点之后不再有检查点。这可能会导致节点故障后的恢复速度变慢，因为作业将从最后一个检查点恢复读取。</li>\n</ol>\n</li>\n</ul>\n<p>基于套接字：</p>\n<ul>\n<li><code>socketTextStream</code> - 从套接字读取。元素可以用分隔符分隔。</li>\n</ul>\n<p>基于集合：</p>\n<ul>\n<li><code>fromCollection(Collection)</code> - 从 Java Java.util.Collection 创建数据流。所有元素 在集合中必须属于同一类型。</li>\n<li><code>fromCollection(Iterator, Class)</code> - 从迭代器创建数据流。该类指定 迭代器返回的元素的数据类型。</li>\n<li><code>fromElements(T ...)</code> - 从给定的对象序列创建数据流。所有对象都必须是 相同类型。</li>\n<li><code>fromParallelCollection(SplittableIterator, Class)</code> - 从迭代器创建数据流，在 平行。该类指定迭代器返回的元素的数据类型。</li>\n<li><code>generateSequence(from, to)</code> - 在给定的时间间隔内生成数字序列，在 平行。</li>\n</ul>\n<p>习惯：</p>\n<ul>\n<li><code>addSource</code> - 附加新的源函数【或者自定义数据源】。例如，要从 Apache Kafka 读取数据，可以使用。有关更多详细信息<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC9kb2NzL2Nvbm5lY3RvcnMvZGF0YXN0cmVhbS9vdmVydmlldy8=\">，请参阅连接器</span>。 <code>addSource(new FlinkKafkaConsumer&lt;&gt;(...))</code></li>\n</ul>\n<p><em>transfrom 算子</em></p>\n<p>有关可用流转换的概述，请参阅<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC9kb2NzL2Rldi9kYXRhc3RyZWFtL29wZXJhdG9ycy9vdmVydmlldy8=\">运算符</span>。</p>\n<p><em>数据接收器</em></p>\n<p>Flink 自带了多种内置的输出格式，这些格式封装在 数据流：</p>\n<ul>\n<li><code>writeAsText()</code>  /  <code>TextOutputFormat</code> - 将元素按行写入字符串。字符串是 通过调用每个元素的 <em>toString（）</em> 方法获得。</li>\n<li><code>writeAsCsv(...)</code>  /  <code>CsvOutputFormat</code> - 将元组写入逗号分隔值文件。行和字段 分隔符是可配置的。每个字段的值来自对象的 <em>toString（）</em> 方法。</li>\n<li><code>print()</code>  /  <code>printToErr()</code> - 打印 <em>toString（）</em> 值 标准输出 / 标准误差流上的每个元素。或者，可以提供前缀 （msg），即 在输出之前。这有助于区分不同的<em>打印</em>调用。如果并行度为 大于 1，则输出还将在前面加上生成输出的任务的标识符。</li>\n<li><code>writeUsingOutputFormat()</code>  /  <code>FileOutputFormat</code> - 自定义文件输出的方法和基类。支持 自定义对象到字节的转换。</li>\n<li><code>writeToSocket</code> - 根据 <code>SerializationSchema</code></li>\n<li><code>addSink</code> - 调用自定义接收器函数。Flink 捆绑了其他系统的连接器（例如 Apache Kafka），作为接收器函数实现。</li>\n</ul>\n<h3 id=\"三-执行模式\"><a class=\"markdownIt-Anchor\" href=\"#三-执行模式\">#</a> 三、执行模式</h3>\n<p>DataStream API 支持不同的运行时执行模式，你可以根据你的用例需要和作业特点进行选择。</p>\n<p>DataStream API 有一种” 经典 “的执行行为，我们称之为 <code>流（STREAMING）</code> 执行模式。这种模式适用于需要连续增量处理，而且预计无限期保持在线的无边界作业。</p>\n<p>此外，还有一种批式执行模式，我们称之为 <code>批（BATCH）</code> 执行模式。这种执行作业的方式更容易让人联想到批处理框架，比如 MapReduce。这种执行模式适用于有一个已知的固定输入，而且不会连续运行的有边界作业。</p>\n<p>Apache Flink 对流处理和批处理统一方法，意味着无论配置何种执行模式，在有界输入上执行的 DataStream 应用都会产生相同的<em>最终</em> 结果。重要的是要注意<em>最终</em> 在这里是什么意思：一个在 <code>流</code> 模式执行的作业可能会产生增量更新（想想数据库中的插入（upsert）操作），而 <code>批</code> 作业只在最后产生一个最终结果。尽管计算方法不同，只要呈现方式得当，最终结果会是相同的。</p>\n<p>可以通过设置配置执行模式。 有三个可能的值： <code>execution.runtime-mode</code></p>\n<ul>\n<li><code>STREAMING</code> ：经典 DataStream 执行模式（默认）</li>\n<li><code>BATCH</code> ：在 DataStream API 上进行批处理式执行</li>\n<li><code>AUTOMATIC</code> ：让系统根据源的有界性来决定</li>\n</ul>\n<p>这可以通过命令行参数进行配置 ，或者 在创建 / 配置 . <code>bin/flink run ...``StreamExecutionEnvironment</code></p>\n<p>以下是通过命令行配置执行模式的方法：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ bin/flink run -Dexecution.runtime-mode<span class=\"token operator\">=</span>BATCH examples/streaming/WordCount.jar</pre></td></tr></table></figure><p>此示例演示如何在代码中配置执行模式：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">StreamExecutionEnvironment</span> env <span class=\"token operator\">=</span> <span class=\"token class-name\">StreamExecutionEnvironment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutionEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>env<span class=\"token punctuation\">.</span><span class=\"token function\">setRuntimeMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RuntimeExecutionMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BATCH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>我们建议用户<strong>不要</strong>在程序中设置运行时模式，而是 提交应用程序时使用命令行进行设置。保持 无需配置应用程序代码，即可实现更大的灵活性 应用程序可以在任何执行模式下执行。</p>\n</blockquote>\n<h3 id=\"四-执行行为\"><a class=\"markdownIt-Anchor\" href=\"#四-执行行为\">#</a> 四、执行行为</h3>\n<h3 id=\"五-任务调度与网络-shuffle\"><a class=\"markdownIt-Anchor\" href=\"#五-任务调度与网络-shuffle\">#</a> 五、任务调度与网络 Shuffle</h3>\n<p>Flink 作业由不同的操作组成，这些操作在数据流图中连接在一起。系统决定如何在不同的进程 / 机器（TaskManager）上调度这些操作的执行，以及如何在它们之间 shuffle （发送）数据。</p>\n<p>将多个操作 / 算子链接在一起的功能称为<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC96aC9kb2NzL2Rldi9kYXRhc3RyZWFtL29wZXJhdG9ycy9vdmVydmlldy8jdGFzay1jaGFpbmluZy1hbmQtcmVzb3VyY2UtZ3JvdXBz\">链</span>。Flink 称一个调度单位的一组或多个（链接在一起的）算子为一个 <em>任务</em>。通常，<em>子任务</em> 用来指代在多个 TaskManager 上并行运行的单个任务实例，但我们在这里只使用 <em>任务</em> (task) 一词。</p>\n<p>任务调度和网络 shuffle 对于 <code>批</code> 和 <code>流</code> 执行模式的执行方式不同。这主要是由于在 <code>批</code> 执行模式中，当知道输入数据是有边界的时候，<strong>Flink 可以使用更高效的数据结构和算法</strong>。</p>\n<p>我们将用这个例子来解释任务调度和网络传输的差异。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">StreamExecutionEnvironment</span> env <span class=\"token operator\">=</span> <span class=\"token class-name\">StreamExecutionEnvironment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutionEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">DataStreamSource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> source <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">fromElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>source<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"source\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"map1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"map2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token function\">rebalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"map3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"map4\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token function\">keyBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"map5\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"map6\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token function\">sinkTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>包含 1-to-1 连接模式的操作，比如  <code>map()</code> 、  <code>flatMap()</code>  或  <code>filter()</code> ，可以直接将数据转发到下一个操作，这使得这些操作可以被链接在一起。这意味着 Flink 一般不会在他们之间插入网络 shuffle。</p>\n<p>而像  <code>keyBy()</code>  或者  <code>rebalance()</code>  这样需要在不同的任务并行实例之间进行数据 shuffle 的操作，就会引起网络 shuffle。</p>\n<p>对于上面的例子，Flink 会将操作分组为这些任务:</p>\n<ul>\n<li>任务 1:  <code>source</code> 、  <code>map1</code>  和  <code>map2</code></li>\n<li>任务 2:  <code>map3</code>  和  <code>map4</code></li>\n<li>任务 3:  <code>map5</code>  、  <code>map6</code>  和  <code>sink</code></li>\n</ul>\n<p>我们在任务 1 到任务 2、任务 2 到任务 3 之间各有一次网络 shuffle。这是该作业的可视化表示：</p>\n<img data-src=\"https://note.youdao.com/yws/api/personal/file/WEBdf4ba0a0f59f9b2a5218765dd5a35cfe?method=download&shareKey=e2599a9aa2a3734364c539c15ae47a50\">\n<h4 id=\"流执行模式\"><a class=\"markdownIt-Anchor\" href=\"#流执行模式\">#</a> 流执行模式</h4>\n<p>在 <code>流</code> 执行模式下，所有任务需要一直在线 / 运行。这使得 Flink 可以通过整个管道立即处理新的记录，以达到我们需要的连续和低延迟的流处理。这同样意味着分配给某个作业的 TaskManagers 需要有足够的资源来同时运行所有的任务。</p>\n<p>网络 shuffle 是 <em>流水线</em> 式的，这意味着记录会立即发送给下游任务，在网络层上进行一些缓冲。同样，这也是必须的，因为当处理连续的数据流时，在任务（或任务管道）之间没有可以实体化的自然数据点（时间点）。这与 <code>批</code> 执行模式形成了鲜明的对比，在 <code>批</code> 执行模式下，中间的结果可以被实体化，如下所述。</p>\n<h4 id=\"批执行模式\"><a class=\"markdownIt-Anchor\" href=\"#批执行模式\">#</a> 批执行模式</h4>\n<p>在 <code>批</code> 执行模式下，一个作业的任务可以被分离成可以一个接一个执行的阶段。我们之所以能做到这一点，是因为输入是有边界的，因此 Flink 可以在进入下一个阶段之前完全处理管道中的一个阶段。在上面的例子中，工作会有三个阶段，对应着被 shuffle 界线分开的三个任务。</p>\n<p>不同于上文所介绍的 <code>流</code> 模式立即向下游任务发送记录，分阶段处理要求 Flink 将任务的中间结果实体化到一些非永久存储中，让下游任务在上游任务已经下线后再读取。这将增加处理的延迟，但也会带来其他有趣的特性。<strong>其一，这允许 Flink 在故障发生时回溯到最新的可用结果，而不是重新启动整个任务。其二， <code>批</code> 作业可以在更少的资源上执行（就 TaskManagers 的可用槽而言），因为系统可以一个接一个地顺序执行任务。</strong></p>\n<blockquote>\n<p>TaskManagers 将至少在下游任务开始消费它们前保留中间结果（从技术上讲，它们将被保留到消费的<em>流水线区域</em>产生它们的输出为止）。在这之后，只要空间允许，它们就会被保留，以便在失败的情况下，可以回溯到前面涉及的结果。</p>\n</blockquote>\n<h3 id=\"六-事件时间\"><a class=\"markdownIt-Anchor\" href=\"#六-事件时间\">#</a> 六、事件时间</h3>\n<ul>\n<li>\n<p>** 处理时间：** 处理时间是指机器的系统时间，即执行相应的操作的时间。</p>\n<p>当流式处理程序在处理时间上运行时，所有基于时间的操作 （如时间窗口）将使用运行各自的运算符。每小时的处理时间窗口将包括所有 在系统到达特定操作员的时间之间的记录 时钟显示整点。例如，如果应用程序开始运行 上午 9：15，第一个每小时处理时间窗口将包括事件 在上午 9：15 至上午 10：00 之间处理，下一个窗口将包含事件 在上午 10：00 至上午 11：00 之间处理，依此类推。</p>\n<p>处理时间是最简单的时间概念，不需要协调 在流和计算机之间。它提供了最佳性能和 最低延迟。但是，在分布式和异步环境中 处理时间不提供确定性，因为它容易受到 记录到达系统的速度（例如，从消息 queue），以记录在 系统，以及中断（计划或其他方式）。</p>\n</li>\n<li>\n<p>** 事件时间：** 事件时间是每个事件发生的时间 其生产装置。此时间通常嵌入在记录中 在他们进入 Flink 之前，可以从中提取<em>该事件时间戳</em> 每条记录。在事件时间中，时间的进展取决于数据，而不是 任何挂钟。事件时间程序必须指定如何生成<em>事件时间 水印</em>，这是在事件时间中发出进度信号的机制。这 水印机制将在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC96aC9kb2NzL2NvbmNlcHRzL3RpbWUvI2V2ZW50LXRpbWUtYW5kLXdhdGVybWFya3M=\">后面</span>的部分中介绍。</p>\n<p>在理想情况下，事件时间处理将产生完全一致的结果 和确定性结果，无论事件何时到达，或者其 订购。但是，除非已知事件按顺序到达（通过 timestamp），事件时间处理在等待时会产生一些延迟 乱序事件。由于只能等待有限的时间，这限制了事件时间应用程序的确定性。</p>\n<p>假设所有数据都已到达，则事件时间操作将表现为 预期，即使在使用 无序或延迟事件，或重新处理历史数据时。例如 每小时事件时间窗口将包含承载事件的所有记录 落入该小时的时间戳，无论它们的顺序如何 到达，或当它们被处理时。</p>\n</li>\n<li>\n<p><strong>摄取时间：</strong></p>\n</li>\n</ul>\n",
            "tags": [
                "大数据",
                "Flink"
            ]
        },
        {
            "id": "http://example.com/2023/12/01/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/Flink%E7%9A%84%E6%90%AD%E5%BB%BA/",
            "url": "http://example.com/2023/12/01/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Flink/Flink%E7%9A%84%E6%90%AD%E5%BB%BA/",
            "title": "Flink的搭建",
            "date_published": "2023-12-01T01:33:02.000Z",
            "content_html": "<h3 id=\"一-集群规划\"><a class=\"markdownIt-Anchor\" href=\"#一-集群规划\">#</a> 一、集群规划</h3>\n<table>\n<thead>\n<tr>\n<th>nodev2001</th>\n<th>nodev2002</th>\n<th>nodev2003</th>\n<th>nodev2004</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>master</td>\n<td>worker</td>\n<td>worker</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xOC96aC9kb2NzL2RlcGxveW1lbnQvamF2YV9jb21wYXRpYmlsaXR5Lw==\">适配的 java 版本</span></strong></p>\n<h3 id=\"二-安装流程\"><a class=\"markdownIt-Anchor\" href=\"#二-安装流程\">#</a> 二、安装流程</h3>\n<p>前往 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mbGluay5hcGFjaGUub3JnL3poL2Rvd25sb2Fkcy5odG1s\">下载页面</span> 获取可运行的软件包。</p>\n<p>在下载完最新的发布版本后，复制压缩文件到 master 节点并解压：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> xzf flink-1.14.0-bin-scala_2.12.tgz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mv</span> flink-1.14.0-bin-scala_2.12.tgz /opt/module</pre></td></tr></table></figure><p>配置 Flink：</p>\n<p>在解压完文件后，编辑 <em>conf/flink-conf.yaml</em> 文件来为集群配置 Flink。</p>\n<ol>\n<li>\n<p>设置  <code>jobmanager.rpc.address</code>  配置项指向 master 节点</p>\n</li>\n<li>\n<p>设置  <code>jobmanager.memory.process.size</code>  和  <code>taskmanager.memory.process.size</code>  配置项来定义 Flink 允许在每个节点上分配的最大内存值。</p>\n</li>\n<li>\n<p>如果 worker 节点上有你想分配到 Flink 系统的多余内存，你可以在这些特定节点的 <em>conf/flink-conf.yaml</em> 文件中重写  <code>taskmanager.memory.process.size</code>  或  <code>taskmanager.memory.flink.size</code>  的默认值。s</p>\n</li>\n<li>\n<p>编辑文件 <em>conf/masters</em> 并输入 master 节点的 IP 或主机名。</p>\n</li>\n<li>\n<p>编辑文件 <em>conf/workers</em> 并输入每个 worker 节点的 IP 或主机名。</p>\n</li>\n<li>\n<p>Flink 目录复制到每个 worker 节点上。</p>\n</li>\n<li>\n<p><strong>参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC96aC9kb2NzL2RlcGxveW1lbnQvY29uZmlnLw==\">配置参数页面</span> 获取更多细节以及额外的配置项。</strong></p>\n</li>\n<li>\n<p>特别地，</p>\n<ul>\n<li>每个 JobManager 的可用内存值（ <code>jobmanager.memory.process.size</code> ），</li>\n<li>每个 TaskManager 的可用内存值 （ <code>taskmanager.memory.process.size</code> ，并检查 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC96aC9kb2NzL2RlcGxveW1lbnQvbWVtb3J5L21lbV90dW5pbmcvI2NvbmZpZ3VyZS1tZW1vcnktZm9yLXN0YW5kYWxvbmUtZGVwbG95bWVudA==\">内存调优指南</span>），</li>\n<li>每台机器的可用 CPU 数（ <code>taskmanager.numberOfTaskSlots</code> ），</li>\n<li>集群中所有 CPU 数（ <code>parallelism.default</code> ）和</li>\n<li>临时目录（ <code>io.tmp.dirs</code> ）</li>\n</ul>\n<p>的值都是非常重要的配置项。</p>\n</li>\n</ol>\n<h3 id=\"三-启动flink集群\"><a class=\"markdownIt-Anchor\" href=\"#三-启动flink集群\">#</a> 三、启动 Flink 集群</h3>\n<ol>\n<li>本地节点启动了一个 JobManager 并通过 SSH 连接到 <em>workers</em> 文件中所有的 worker 节点，master 节点的 flink 目录下</li>\n</ol>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bin/start-cluster.sh</pre></td></tr></table></figure><ol start=\"2\">\n<li>\n<p>关闭 Flink，这里同样有一个  <code>stop-cluster.sh</code>  脚本。</p>\n</li>\n<li>\n<p>为集群添加 JobManager<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>/TaskManager<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup> 实例</p>\n<p><strong>添加 JobManager</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bin/jobmanager.sh <span class=\"token punctuation\">((</span>start<span class=\"token operator\">|</span>start-foreground<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>host<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>webui-port<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>stop-all</pre></td></tr></table></figure><p><strong>添加 TaskManager</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bin/taskmanager.sh start<span class=\"token operator\">|</span>start-foreground<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>stop-all</pre></td></tr></table></figure><p>确保在你想启动 / 关闭相应实例的主机上执行这些脚本。</p>\n</li>\n</ol>\n<h3 id=\"四-使用yarn管理集群\"><a class=\"markdownIt-Anchor\" href=\"#四-使用yarn管理集群\">#</a> 四、使用 Yarn 管理集群</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC9kb2NzL2RlcGxveW1lbnQvb3ZlcnZpZXcvI2FwcGxpY2F0aW9uLW1vZGU=\">Flink 的 3 种部署模式</span></p>\n<ol>\n<li>应用程序模式：</li>\n<li>作业模式：<em>Per-Job</em> 模式使用可用的资源提供程序 框架（例如 YARN、Kubernetes）为每个提交的作业启动一个集群。此群集可用于 只有那份工作。作业完成后，群集将被拆除，任何延迟的资源（文件等）都会被拆除 清除了。</li>\n<li>会话模式：多个 flink Application 向同一个 JobManager 提交，相互之间竞争资源；好处：不需要重复的启动集群。</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>部署模式</th>\n<th>启动集群</th>\n<th>资源隔离</th>\n<th>JM 数量</th>\n<th>应用程序的方法</th>\n<th>适合情况</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>应用程序模式</td>\n<td>1 次</td>\n<td>隔离</td>\n<td>1/per job</td>\n<td>jM</td>\n<td>【作业模式，会话模式折中】</td>\n</tr>\n<tr>\n<td>作业模式</td>\n<td>1/per job</td>\n<td>隔离</td>\n<td>1/per job</td>\n<td>client</td>\n<td>长时间运行的作业</td>\n</tr>\n<tr>\n<td>会话模式</td>\n<td>1 次</td>\n<td>不隔离</td>\n<td>1</td>\n<td>client</td>\n<td>低延迟，运行时间短</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"五-使用问题\"><a class=\"markdownIt-Anchor\" href=\"#五-使用问题\">#</a> 五、使用问题</h3>\n<ol>\n<li>会话模式，per-job 模式启动两个任务会失败</li>\n</ol>\n<h3 id=\"脚注\"><a class=\"markdownIt-Anchor\" href=\"#脚注\">#</a> 脚注</h3>\n<p><em>JobManager</em> 具有许多与协调 Flink 应用程序的分布式执行有关的职责：它决定何时调度下一个 task（或一组 task）、对完成的 task 或执行失败做出反应、协调 checkpoint、并且协调从失败中恢复等等。这个进程由三个不同的组件组成：</p>\n<ul>\n<li>\n<p><strong>ResourceManager</strong></p>\n<p><em>ResourceManager</em> 负责 Flink 集群中的资源提供、回收、分配 - 它管理 <strong>task slots</strong>，这是 Flink 集群中资源调度的单位（请参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC96aC9kb2NzL2NvbmNlcHRzL2ZsaW5rLWFyY2hpdGVjdHVyZS8jdGFza21hbmFnZXJz\"> TaskManagers</span>）。Flink 为不同的环境和资源提供者（例如 YARN、Kubernetes 和 standalone 部署）实现了对应的 ResourceManager。在 standalone 设置中，ResourceManager 只能分配可用 TaskManager 的 slots，而不能自行启动新的 TaskManager。</p>\n</li>\n<li>\n<p><strong>Dispatcher</strong></p>\n<p><em>Dispatcher</em> 提供了一个 REST 接口，用来提交 Flink 应用程序执行，并为每个提交的作业启动一个新的 JobMaster。它还运行 Flink WebUI 用来提供作业执行信息。</p>\n</li>\n<li>\n<p><strong>JobMaster</strong></p>\n<p><em>JobMaster</em> 负责管理单个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC96aC9kb2NzL2NvbmNlcHRzL2dsb3NzYXJ5LyNsb2dpY2FsLWdyYXBo\"> JobGraph</span> 的执行。Flink 集群中可以同时运行多个作业，每个作业都有自己的 JobMaster。</p>\n</li>\n</ul>\n<p>始终至少有一个 JobManager。高可用（HA）设置中可能有多个 JobManager，其中一个始终是 <em>leader</em>，其他的则是 <em>standby</em>（请参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC96aC9kb2NzL2RlcGxveW1lbnQvaGEvb3ZlcnZpZXcv\">高可用（HA）</span>）。</p>\n<p><em>TaskManager</em>（也称为 <em>worker</em>）执行作业流的 task，并且缓存和交换数据流。</p>\n<p>必须始终至少有一个 TaskManager。在 TaskManager 中资源调度的最小单位是 task <em>slot</em>。TaskManager 中 task slot 的数量表示并发处理 task 的数量。请注意一个 task slot 中可以执行多个算子（请参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWdodGxpZXMuYXBhY2hlLm9yZy9mbGluay9mbGluay1kb2NzLXJlbGVhc2UtMS4xNC96aC9kb2NzL2NvbmNlcHRzL2ZsaW5rLWFyY2hpdGVjdHVyZS8jdGFza3MtYW5kLW9wZXJhdG9yLWNoYWlucw==\"> Tasks 和算子链</span>）。</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>JobManager <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>TaskManagers <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "大数据",
                "Flink"
            ]
        },
        {
            "id": "http://example.com/2023/11/16/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Hive/hive3-13%E6%B7%BB%E5%8A%A0spark%E5%BC%95%E6%93%8E/",
            "url": "http://example.com/2023/11/16/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Hive/hive3-13%E6%B7%BB%E5%8A%A0spark%E5%BC%95%E6%93%8E/",
            "title": "hive3.13添加spark引擎",
            "date_published": "2023-11-16T02:39:42.000Z",
            "content_html": "<p><em><strong>大数据架构 :lambda 架构，hsap 架构，流批一体</strong></em></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jd2lraS5hcGFjaGUub3JnL2NvbmZsdWVuY2UvZGlzcGxheS9IaXZlL0hpdmUrb24rU3BhcmslM0ErR2V0dGluZytTdGFydGVk\">Hive 官网关于 spark on hive</span></p>\n<h3 id=\"一-spark-on-hive-和-hive-on-spark-的区别和联系\"><a class=\"markdownIt-Anchor\" href=\"#一-spark-on-hive-和-hive-on-spark-的区别和联系\">#</a> 一、spark on hive 和 hive on spark 的区别和联系</h3>\n<p><em><strong>spark on hive</strong></em>：Spark on Hive 是 Hive 只作为存储角色，Spark 负责 sql 解析优化，执行</p>\n<p><em><strong>hive on spark：</strong></em></p>\n<h3 id=\"二-版本选择\"><a class=\"markdownIt-Anchor\" href=\"#二-版本选择\">#</a> 二、版本选择</h3>\n<h3 id=\"三-修改后运行时长对比\"><a class=\"markdownIt-Anchor\" href=\"#三-修改后运行时长对比\">#</a> 三、修改后运行时长对比</h3>\n",
            "tags": [
                "升级"
            ]
        },
        {
            "id": "http://example.com/2023/11/03/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Hive/Hive%E4%B8%AD%E7%9A%84explode/",
            "url": "http://example.com/2023/11/03/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Hive/Hive%E4%B8%AD%E7%9A%84explode/",
            "title": "Hive中的explode",
            "date_published": "2023-11-03T02:22:29.000Z",
            "content_html": "<h3 id=\"一-问题介绍\"><a class=\"markdownIt-Anchor\" href=\"#一-问题介绍\">#</a> 一、问题介绍</h3>\n<p>在使用 explode 进行炸列操作时，发现炸列后有的行消失了。</p>\n<h3 id=\"二-模拟场景\"><a class=\"markdownIt-Anchor\" href=\"#二-模拟场景\">#</a> 二、模拟场景</h3>\n<pre><code class=\"language-hive\">建表语句\ndrop table test.shyl_explode_test;\ncreate table test.shyl_explode_test(\n    `id` string comment 'id',\n    `list` ARRAY&lt;string&gt; comment '列表'\n)comment'测试炸列函数所使用的字段为空时，该行数据如何处理'\nstored as orc;\n插入数据\nINSERT INTO TABLE shyl_explode_test VALUES\n  ('1', array('A', 'B', 'C')),\n  ('2', array('X', 'Y')),\n  ('3', array(&quot;&quot;))\n  ('4', null)\n  ('5', array(null));\n</code></pre>\n<p>当插入数据 (‘4’, null) 报错 <code>[42000][40000] Error while compiling statement: FAILED: SemanticException 0:0 Expected 2 columns for insclause-0/test@shyl_explode_test; select produces 1 columns. Error encountered near token 'TOK_NULL'</code></p>\n<p>大概的意思是说这个 list 字段的数据类型是 array，现在要插入一个 null 类型的，类型不匹配，</p>\n<p>但是在实际情况中，表中数据类型为 array，其值为 null 的情况不少见，比如我们是通过上传文件到 hdfs，再通过 hive 建表关联数据，得到的表【具体过程没有验证，不确定是是否可以创建成功】；执行连接操作时，没有关联上的使用 null 填充【未验证】; 或者只插入一个列的值，【本文就采取这种方式】，得到 list 字段为空的情况：</p>\n<pre><code class=\"language-HIVE\">INSERT INTO TABLE shyl_explode_test(id) VALUES ('4');\n</code></pre>\n<pre><code class=\"language-hive\">查看表中的数据\nselect * from test.shyl_explode_test;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">id</th>\n<th style=\"text-align:left\">list</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">[“A”,“B”,“C”]</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">[“X”,“Y”]</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">[&quot;&quot;]</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">[null]</td>\n</tr>\n</tbody>\n</table>\n<pre><code class=\"language-hive\">现根据list字段为null，查询出指定数据\nselect * from test.shyl_explode_test where list is null;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>list</th>\n</tr>\n</thead>\n</table>\n<p>发现数据为空，原因可能与字段类型为 array 有关</p>\n<p>现提供一个其它的方式查询</p>\n<pre><code class=\"language-hive\">因为size(map/array)返回 -1 作为特殊的值，通常表示一个无效或异常的情况，而不是实际的大小或长度,所以利用它来查询空值\nselect size(null);\n-1\nselect * from test.shyl_explode_test where size(list)=-1;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">id</th>\n<th style=\"text-align:left\">list</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n</tbody>\n</table>\n<p>有关 sql 中的 null 参考此文：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC84MjQzNDAyNA==\">原文地址</span></p>\n<h3 id=\"三-执行explode\"><a class=\"markdownIt-Anchor\" href=\"#三-执行explode\">#</a> 三、执行 explode</h3>\n<pre><code>select * from test.shyl_explode_test\nlateral view explode(list)t1 as a;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">id</th>\n<th style=\"text-align:left\">list</th>\n<th style=\"text-align:left\">a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">[“A”,“B”,“C”]</td>\n<td style=\"text-align:left\">A</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">[“A”,“B”,“C”]</td>\n<td style=\"text-align:left\">B</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">[“A”,“B”,“C”]</td>\n<td style=\"text-align:left\">C</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">[“X”,“Y”]</td>\n<td style=\"text-align:left\">X</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">[“X”,“Y”]</td>\n<td style=\"text-align:left\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">[&quot;&quot;]</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">[null]</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n</tbody>\n</table>\n<p>我们发现 id 为 4 的那一行数据缺失，现在是有两列，当我的列数多，且其它列的数据重要时，会发生丢失一些重要数据的情况。</p>\n<p>所以在执行 explode 的时候添加一些保护机制，附上一些不影响结果的默认值。</p>\n<pre><code class=\"language-hive\">select * from test.shyl_explode_test\nlateral view explode(nvl(list,array(NULL)))t1 as a;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">id</th>\n<th style=\"text-align:left\">list</th>\n<th style=\"text-align:left\">a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">[“A”,“B”,“C”]</td>\n<td style=\"text-align:left\">A</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">[“A”,“B”,“C”]</td>\n<td style=\"text-align:left\">B</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">[“A”,“B”,“C”]</td>\n<td style=\"text-align:left\">C</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">[“X”,“Y”]</td>\n<td style=\"text-align:left\">X</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">[“X”,“Y”]</td>\n<td style=\"text-align:left\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">[&quot;&quot;]</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><font style=\"color:red\">4</font></td>\n<td style=\"text-align:left\"><font style=\"color:red\">null</font></td>\n<td style=\"text-align:left\"><font style=\"color:red\">null</font></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">[null]</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"四-explodelateral-view源码剖析\"><a class=\"markdownIt-Anchor\" href=\"#四-explodelateral-view源码剖析\">#</a> 四、explode+lateral view 源码剖析</h3>\n<p>【目前不会看源码】，之后有能力补上，从结果反推，像是炸列后执行的 inner join。</p>\n",
            "tags": [
                "Bug"
            ]
        },
        {
            "id": "http://example.com/2023/11/03/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Hive/Hive%E4%B8%AD%E7%9A%84Struct%E7%B1%BB%E5%9E%8BBug/",
            "url": "http://example.com/2023/11/03/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/Hive/Hive%E4%B8%AD%E7%9A%84Struct%E7%B1%BB%E5%9E%8BBug/",
            "title": "Hive中的Struct类型Bug",
            "date_published": "2023-11-03T02:21:17.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pc3N1ZXMuYXBhY2hlLm9yZy9qaXJhL2Jyb3dzZS9ISVZFLTIxNzc4\">原文地址</span></p>\n<h3 id=\"一-hive的struct类型介绍\"><a class=\"markdownIt-Anchor\" href=\"#一-hive的struct类型介绍\">#</a> 一、hive 的 Struct 类型介绍</h3>\n<p>Struct 是 Hive 复杂数据类型的一种 ，声明方式  <code>STRUCT&lt;col_name : data_type [COMMENT col_comment], ...&gt;</code></p>\n<h3 id=\"二-cbo介绍\"><a class=\"markdownIt-Anchor\" href=\"#二-cbo介绍\">#</a> 二、CBO 介绍</h3>\n<h3 id=\"三-解决方式\"><a class=\"markdownIt-Anchor\" href=\"#三-解决方式\">#</a> 三、解决方式</h3>\n",
            "tags": [
                "Bug"
            ]
        },
        {
            "id": "http://example.com/2023/10/19/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E4%BB%93%E6%90%AD%E5%BB%BA%E7%9A%84%E6%95%B0%E6%8D%AE%E8%B7%A8%E5%A4%A9%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2023/10/19/BaiduSyncdisk/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E4%BB%93%E6%90%AD%E5%BB%BA%E7%9A%84%E6%95%B0%E6%8D%AE%E8%B7%A8%E5%A4%A9%E9%97%AE%E9%A2%98/",
            "title": "数仓搭建的数据跨天问题",
            "date_published": "2023-10-19T09:19:32.000Z",
            "content_html": "<h3 id=\"一-问题背景\"><a class=\"markdownIt-Anchor\" href=\"#一-问题背景\">#</a> 一、问题背景</h3>\n<p>在电商的离线数仓搭建中，进行 dwd 层订单域的设计中，普遍会出现订单数据跨天的情况，对于边界数据该如何处理。</p>\n<h3 id=\"二-业务背景\"><a class=\"markdownIt-Anchor\" href=\"#二-业务背景\">#</a> 二、业务背景</h3>\n<p>业务表的关系如下图所示：</p>\n<img data-src='https://note.youdao.com/yws/api/personal/file/WEBe8594c5b923fa1ad10c34399375740d0?method=download&shareKey=709a969272424f2a2da8e4550013b845'>\n<h5 id=\"举例说明\"><a class=\"markdownIt-Anchor\" href=\"#举例说明\">#</a> 举例说明：</h5>\n<p>​\t\t假设某用户在 2023-08-18 23:59 分下单，在 2023-08-19 0：01 完成支付。在业务系统的中数据的流转是：</p>\n<ol>\n<li>下单会在 order_info【订单信息表】,order_detail【订单详情表】，order_detail_coupon【订单明细优惠券关联表】,order_detail_activity【订单明细活动关联表】会新增一条订单相关数据。</li>\n<li>order_info【订单信息表】是一张状态表，数据发生变化，会 update 相关数据，比如订单状态【从未支付到已支付】而 order_detail【订单详情表】只记录了订单的详细信息，基本上都是维度信息，不会发生变动。</li>\n<li>我们搭建离线数仓中，增量数据同步使用的 maxwell，全量数据同步使用的是 datax，订单相关的表我们选择的是 maxwell，众所周知，maxwell 同步数据基本上分为两类，insert【新增的数据】和 update【更新的数据】。</li>\n<li>现想要制作一张用户下单成功的事务事实表，由于用户订单成功状态是在 19 日更新的，所以计算该条下单成功是在 19 日，而订单的详细信息是 18 日的时候插入订单详细表中的，在数仓中数据 18 日的分区。</li>\n<li>所以我们加工 19 日分区的下单成功表，需要关联的是 18 日，19 日的订单详情表。</li>\n<li>一般数仓的加工是 T+1, 所以 2023-08-20 计算 2023-08-19 的数据，插入 2023-08-19 分区。 内部需要关联 2023-08-18,2023-08-19 的数据。、</li>\n</ol>\n<h3 id=\"问题总结\"><a class=\"markdownIt-Anchor\" href=\"#问题总结\">#</a> 问题总结</h3>\n<p>数仓中的业务过程要仔细理解，根据表的更新逻辑，数据同步的方式，选择出合理的数据加工方式。</p>\n",
            "tags": [
                "总结",
                "数仓搭建"
            ]
        }
    ]
}