{
    "version": "https://jsonfeed.org/version/1",
    "title": "碎念随风 • All posts by \"教程\" category",
    "description": "人海未见之时，我亦独行在这城市。 料峭，春醒，酷暑，骤雨，寒意四起，大雁南飞，而后，大雪，寒风， 斗转星移，人间寒暑。",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/10/24/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%EF%BC%88%E4%BA%8C%EF%BC%89/",
            "url": "http://example.com/2023/10/24/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%EF%BC%88%E4%BA%8C%EF%BC%89/",
            "title": "Python网络爬虫（二）",
            "date_published": "2023-10-24T07:34:44.000Z",
            "content_html": "<h3 id=\"一-request库\"><a class=\"markdownIt-Anchor\" href=\"#一-request库\">#</a> 一、request 库</h3>\n<p>Requests 是一个常用的 HTTP 请求库，可以方便地向网站发送 HTTP 请求，并获取响应结果。这是官方的文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZXF1ZXN0cy5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qv\">request 官方文档</span>（官方文档不太容易看懂😹）可以选择菜鸟教程里面的 requests 库讲解<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9weXRob24zL3B5dGhvbi1yZXF1ZXN0cy5odG1s\">菜鸟教程</span>。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性或方法</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">apparent_encoding</td>\n<td style=\"text-align:left\">编码方式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">close()</td>\n<td style=\"text-align:left\">关闭与服务器的连接</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">content</td>\n<td style=\"text-align:left\">返回响应的内容，以字节为单位</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cookies</td>\n<td style=\"text-align:left\">返回一个 CookieJar 对象，包含了从服务器发回的 cookie</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">elapsed</td>\n<td style=\"text-align:left\">返回一个 timedelta 对象，包含了从发送请求到响应到达之间经过的时间量，可以用于测试响应速度。比如 r.elapsed.microseconds 表示响应到达需要多少微秒。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">encoding</td>\n<td style=\"text-align:left\">解码 r.text 的编码方式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">headers</td>\n<td style=\"text-align:left\">返回响应头，字典格式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">history</td>\n<td style=\"text-align:left\">返回包含请求历史的响应对象列表（url）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is_permanent_redirect</td>\n<td style=\"text-align:left\">如果响应是永久重定向的 url，则返回 True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is_redirect</td>\n<td style=\"text-align:left\">如果响应被重定向，则返回 True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iter_content()</td>\n<td style=\"text-align:left\">迭代响应</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iter_lines()</td>\n<td style=\"text-align:left\">迭代响应的行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">json()</td>\n<td style=\"text-align:left\">返回结果的 JSON 对象 (结果需要以 JSON 格式编写的，否则会引发错误)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">links</td>\n<td style=\"text-align:left\">返回响应的解析头链接</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">next</td>\n<td style=\"text-align:left\">返回重定向链中下一个请求的 PreparedRequest 对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ok</td>\n<td style=\"text-align:left\">检查 “status_code” 的值，如果小于 400，则返回 True，如果不小于 400，则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">raise_for_status()</td>\n<td style=\"text-align:left\">如果发生错误，方法返回一个 HTTPError 对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">reason</td>\n<td style=\"text-align:left\">响应状态的描述，比如 “Not Found” 或 “OK”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">request</td>\n<td style=\"text-align:left\">返回请求此响应的请求对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">status_code</td>\n<td style=\"text-align:left\">返回 http 的状态码，比如 404 和 200（200 是 OK，404 是 Not Found）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">text</td>\n<td style=\"text-align:left\">返回响应的内容，unicode 类型数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">url</td>\n<td style=\"text-align:left\">返回响应的 URL</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"二-beautiful-soup库\"><a class=\"markdownIt-Anchor\" href=\"#二-beautiful-soup库\">#</a> 二、Beautiful soup 库</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZWF1dGlmdWxzb3VwLmNuLw==\">Beautiful Soup</span> 是一个可以从 HTML 或 XML 文件中提取数据的 Python 库。它能够通过你喜欢的转换器实现惯用的文档导航，查找，修改文档的方式.Beautiful Soup 会帮你节省数小时甚至数天的工作时间.</p>\n<p>下表列出了主要的解析器，以及它们的优缺点:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">解析器</th>\n<th style=\"text-align:left\">使用方法</th>\n<th style=\"text-align:left\">优势</th>\n<th style=\"text-align:left\">劣势</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Python 标准库</td>\n<td style=\"text-align:left\"><code>BeautifulSoup(markup, &quot;html.parser&quot;)</code></td>\n<td style=\"text-align:left\">Python 的内置标准库执行速度适中文档容错能力强</td>\n<td style=\"text-align:left\">Python 2.7.3 or 3.2.2) 前 的版本中文档容错能力差</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lxml HTML 解析器</td>\n<td style=\"text-align:left\"><code>BeautifulSoup(markup, &quot;lxml&quot;)</code></td>\n<td style=\"text-align:left\">速度快文档容错能力强</td>\n<td style=\"text-align:left\">需要安装 C 语言库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lxml XML 解析器</td>\n<td style=\"text-align:left\"><code>BeautifulSoup(markup, [&quot;lxml-xml&quot;])``BeautifulSoup(markup, &quot;xml&quot;)</code></td>\n<td style=\"text-align:left\">速度快唯一支持 XML 的解析器</td>\n<td style=\"text-align:left\">需要安装 C 语言库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">html5lib</td>\n<td style=\"text-align:left\"><code>BeautifulSoup(markup, &quot;html5lib&quot;)</code></td>\n<td style=\"text-align:left\">最好的容错性以浏览器的方式解析文档生成 HTML5 格式的文档</td>\n<td style=\"text-align:left\">速度慢不依赖外部扩展</td>\n</tr>\n</tbody>\n</table>\n<p>将一段文档传入 BeautifulSoup 的构造方法，就能得到一个文档的对象，可以传入一段字符串或一个文件句柄.</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;html>data&lt;/html>\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"beautiful-soup的4种对象\"><a class=\"markdownIt-Anchor\" href=\"#beautiful-soup的4种对象\">#</a> Beautiful Soup 的 4 种对象</h4>\n<p>Beautiful Soup 将复杂 HTML 文档转换成一个复杂的树形结构，每个节点都是 Python 对象，所有对象可以归纳为 4 种:  <code>Tag</code>  ,  <code>NavigableString</code>  ,  <code>BeautifulSoup</code>  ,  <code>Comment</code>  .</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>html_doc <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&lt;html>&lt;head>&lt;title>The Dormouse's story&lt;/title>&lt;/head></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&lt;body></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;p class=\"title\">&lt;b>The Dormouse's story&lt;/b>&lt;/p></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&lt;p class=\"story\">Once upon a time there were three little sisters; and their names were</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&lt;a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie&lt;/a>,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&lt;a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie&lt;/a> and</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&lt;a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie&lt;/a>;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>and they lived at the bottom of a well.&lt;/p></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&lt;p class=\"story\">...&lt;/p></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\"\"\"</span></pre></td></tr></table></figure><p class=\"note note-danger\">以下代码块中  `#` 后面的内容一般代指输出结果</p>\n<ol>\n<li><em><strong>Tag</strong></em></li>\n</ol>\n<p><code>Tag</code>  对象与 XML 或 HTML 原生文档中的 tag 相同:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;b class=\"boldest\">Extremely bold&lt;/b>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>tag <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>b</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># &lt;class 'bs4.element.Tag'></span></pre></td></tr></table></figure><p><font style='color:red'>tag 中最重要的属性: name 和 attributes</font></p>\n<ul>\n<li>Name: 每个 tag 都有自己的名字，通过  <code>.name</code>  来获取:</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># a</span></pre></td></tr></table></figure><p>如果改变了 tag 的 name, 那将影响所有通过当前 Beautiful Soup 对象生成的 HTML 文档:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span><span class=\"token string\">'你好'</span> <span class=\"token comment\">#只会修改第一个 a 标签</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>你好<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#&lt; 你好 class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie&lt;/ 你好 ></span></pre></td></tr></table></figure><ul>\n<li>Attributes: 一个 tag 可能有很多个属性. tag  <code>&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</code>  有一个 “class” 的属性，值为 “sister” .<font style='color:red'> tag 的属性的操作方法与字典相同；可以使用 <code>.attrs</code>  老获取全部属性 </font></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#['sister']</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># link1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>attrs</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># &#123;'href': 'http://example.com/elsie', 'class': ['sister'], 'id': 'link1'&#125;</span></pre></td></tr></table></figure><p class=\"note note-primary\">tag的属性可以被添加,删除或修改.tag的属性操作方法与字典一样<br>以下方法 只针对遇到的第一个标签的属性</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#新增</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'insert'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'增加'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># &lt;a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\" insert=\"增加\">Elsie&lt;/a></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#删除</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">del</span> soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># &lt;a href=\"http://example.com/elsie\" id=\"link1\">Elsie&lt;/a></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 修改</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">[</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'brother'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>attrs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># &#123;'href': 'http://example.com/elsie', 'class': 'brother', 'id': 'link1'&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><em><strong>NavigableString</strong></em>（可以遍历的字符串）</li>\n</ol>\n<p>字符串常被包含在 tag 内.Beautiful Soup 用  <code>NavigableString</code>  类来包装 tag 中的字符串:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>string</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Elsie</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'bs4.element.NavigableString'</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p><font style='color:red'>tag 中包含的字符串不能编辑，但是可以被替换成其它的字符串，用 replace_with () 方法</font></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>replace_with<span class=\"token punctuation\">(</span><span class=\"token string\">'你好'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># &lt;a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\"> 你好 & lt;/a></span></pre></td></tr></table></figure><ol start=\"3\">\n<li><em><strong>BeautifulSoup</strong></em></li>\n</ol>\n<p><code>BeautifulSoup</code>  对象表示的是一个文档的全部内容。大部分时候，可以把它当作  <code>Tag</code>  对象，它支持 遍历文档树 和 搜索文档树中描述的大部分的方法。</p>\n<ol start=\"4\">\n<li><em><strong>comment</strong></em></li>\n</ol>\n<p><code>Tag</code>  ,  <code>NavigableString</code>  ,  <code>BeautifulSoup</code>  几乎覆盖了 html 和 xml 中的所有内容，但是还有一些特殊对象。容易让人担心的内容是文档的注释部分:</p>\n<ul>\n<li>Coment 对象是一个特殊类型的 NavigableString 对象。</li>\n<li>如果标签内部的内容是注释，例如： <code>&lt;!-- Elsie --&gt;</code> 。那么该 NavigableSring 对象会转换成 Comment 对象，并且会把注释符号去掉。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>markup <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;b>&lt;!--Hey, buddy. Want to buy a used parser?-->&lt;/b>\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>markup<span class=\"token punctuation\">,</span><span class=\"token string\">'lxml'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>text<span class=\"token operator\">+</span><span class=\"token string\">'输出为空'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#输出为空</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>comment <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>string</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Hey, buddy. Want to buy a used parser?</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># &lt;class 'bs4.element.Comment'></span></pre></td></tr></table></figure><h4 id=\"遍历文档树\"><a class=\"markdownIt-Anchor\" href=\"#遍历文档树\">#</a> 遍历文档树</h4>\n<ol>\n<li><em><strong>子结点</strong></em></li>\n</ol>\n<p>一个 Tag 可能包含多个字符串或其它的 Tag, 这些都是这个 Tag 的子节点.Beautiful Soup 提供了许多操作和遍历子节点的属性.</p>\n<p><font style=\"color:red\">注意: Beautiful Soup 中字符串节点不支持这些属性，因为字符串没有子节点</font></p>\n<ol start=\"2\">\n<li><em><strong>tag 的名字</strong></em></li>\n</ol>\n<p>操作文档树最简单的方法就是告诉它你想获取的 tag 的 name. 如果想获取 <head> 标签，只要用  <code>soup.head</code>  :</p>\n<pre><code class=\"language-Python\">soup.head\n# &lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;\n\nsoup.title\n# &lt;title&gt;The Dormouse's story&lt;/title&gt;\n</code></pre>\n<p>这是个获取 tag 的小窍门，可以在文档树的 tag 中多次调用这个方法。下面的代码可以获取 <code>&lt;body&gt;</code>  标签中的第一个 <code>&lt;b&gt;</code>  标签:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>b</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># &lt;b>The Dormouse's story&lt;/b></span></pre></td></tr></table></figure><p class=\"note note-info\">Tip:通过点取属性的方式只能获得当前名字的第一个tag:</p>\n<p>如果想要得到所有的 <code>&lt;a&gt;</code>  标签，或是通过名字得到比一个 tag 更多的内容的时候，就需要用到 Searching the tree 中描述的方法，比如: find_all ()</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># [&lt;a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie&lt;/a>, &lt;a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie&lt;/a>, &lt;a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie&lt;/a>]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># &lt;class 'bs4.element.ResultSet'></span></pre></td></tr></table></figure><ol start=\"3\">\n<li><em><strong>.contents 和 .children</strong></em></li>\n</ol>\n<p>tag 的  <code>.contents</code>  属性可以将 tag 的子节点以列表的方式输出:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>contents</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># ['\\n', &lt;p class=\"title\">&lt;b>The Dormouse's story&lt;/b>&lt;/p>, '\\n', &lt;p class=\"story\">Once upon a time there were three little sisters; and their names were &lt;a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie&lt;/a>, &lt;a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie&lt;/a> and &lt;a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie&lt;/a>; and they lived at the bottom of a well.&lt;/p>, '\\n', &lt;p class=\"story\">...&lt;/p>, '\\n']</span></pre></td></tr></table></figure><p>通过 tag 的  <code>.children</code>  生成器，可以对 tag 的子节点进行循环:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># &lt;class 'list_iterator'> 迭代器</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> child <span class=\"token keyword\">in</span> soup<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#                      &lt; 第一行数据为空 >    </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># &lt;class 'bs4.element.NavigableString</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#&lt;p class=\"title\">&lt;b>The Dormouse's story&lt;/b>&lt;/p></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#&lt;class 'bs4.element.Tag'></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># &lt;p class=\"story\">Once upon a time there were three little sisters; and their names were</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># &lt;a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie&lt;/a>,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># &lt;a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie&lt;/a> and</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># &lt;a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie&lt;/a>;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># and they lived at the bottom of a well.&lt;/p></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># &lt;class 'bs4.element.Tag'></span></pre></td></tr></table></figure><ol start=\"4\">\n<li><em><strong>.descendants</strong></em></li>\n</ol>\n<p><code>.contents</code>  和  <code>.children</code>  属性仅包含 tag 的直接子节点。例如，<head>标签只有一个直接子节点<title></p>\n<pre><code>head_tag.contents\n# [&lt;title&gt;The Dormouse's story&lt;/title&gt;]\n</code></pre>\n<p>但是<title>标签也包含一个子节点：字符串 “The Dormouse’s story”, 这种情况下字符串 “The Dormouse’s story” 也属于<head>标签的子孙节点.  <code>.descendants</code>  属性可以对所有 tag 的子孙节点进行递归循环</p>\n",
            "tags": [
                "Python",
                "爬虫"
            ]
        },
        {
            "id": "http://example.com/2023/10/24/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B8%80/",
            "url": "http://example.com/2023/10/24/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B8%80/",
            "title": "Python网络爬虫（一）",
            "date_published": "2023-10-24T01:21:16.000Z",
            "content_html": "<h3 id=\"一-爬虫简介\"><a class=\"markdownIt-Anchor\" href=\"#一-爬虫简介\">#</a> 一、爬虫简介</h3>\n<p>网络爬虫（又称为网页蜘蛛，网络机器人，在 FOAF 社区中间，更经常的称为网页追逐者），是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。另外一些不常使用的名字还有蚂蚁、自动索引、模拟程序或者蠕虫。</p>\n<h3 id=\"二-网站robots协议\"><a class=\"markdownIt-Anchor\" href=\"#二-网站robots协议\">#</a> 二、网站 robots 协议</h3>\n<p>robots 是搜索引擎爬虫协议，也就是你网站和爬虫的协议。</p>\n<p>** 简单的理解：**robots 是告诉搜索引擎，你可以爬取收录我的什么页面，你不可以爬取和收录我的那些页面。robots 很好的控制网站那些页面可以被爬取，那些页面不可以被爬取。</p>\n<p><strong>主流的搜索引擎都会遵守 robots 协议</strong>。并且 robots 协议是爬虫爬取网站第一个需要爬取的文件。爬虫爬取 robots 文件后，会读取上面的协议，并准守协议爬取网站，收录网站。</p>\n<p><strong>robots 文件是一个纯文本文件，也就是常见的.txt 文件</strong>。在这个文件中网站管理者可以声明该网站中不想被 robots 访问的部分，或者指定搜索引擎只收录指定的内容。因此，robots 的优化会直接影响到搜索引擎对网站的收录情况。</p>\n<h5 id=\"存放目录\"><a class=\"markdownIt-Anchor\" href=\"#存放目录\">#</a> 存放目录</h5>\n<p><strong>robots 文件必须要存放在网站的根目录下</strong>。也就是 域名 /robots.txt 是可以访问文件的。你们也可以尝试访问别人网站的 robots 文件。 输入域名 /robots.txt 即可访问。示例：知乎</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcm9ib3RzLnR4dA==\">知乎的 robots 文件</span></p>\n<h5 id=\"robots写作语法\"><a class=\"markdownIt-Anchor\" href=\"#robots写作语法\">#</a> robots 写作语法</h5>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>User-agent: Googlebot</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Disallow: /appview/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Disallow: /login</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Disallow: /logout</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Disallow: /resetpassword</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Disallow: /terms</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Disallow: /search</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Allow: /search-special</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Disallow: /notifications</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Disallow: /settings</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Disallow: /inbox</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Disallow: /admin_inbox</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Disallow: /*?guide*</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>User-agent: Googlebot-Image</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Disallow: /appview/</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Disallow: /login</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Disallow: /logout</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Disallow: /resetpassword</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Disallow: /terms</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Disallow: /search</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>Allow: /search-special</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>Disallow: /notifications</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>Disallow: /settings</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>Disallow: /inbox</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>Disallow: /admin_inbox</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>Disallow: /*?guide*</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>User-agent: Baiduspider-news</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>Disallow: /appview/</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>Disallow: /login</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>Disallow: /logout</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>Disallow: /resetpassword</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>Disallow: /terms</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>Disallow: /search</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>Allow: /search-special</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>Disallow: /notifications</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>Disallow: /settings</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>Disallow: /inbox</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>Disallow: /admin_inbox</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>Disallow: /*?guide*</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>User-agent: Baiduspider</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>Disallow: /appview/</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>Disallow: /login</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>Disallow: /logout</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>Disallow: /resetpassword</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>Disallow: /terms</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>Disallow: /search</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>Allow: /search-special</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>Disallow: /notifications</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>Disallow: /settings</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>Disallow: /inbox</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>Disallow: /admin_inbox</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>Disallow: /*?guide*</pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>User-agent: Baiduspider-render</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>Disallow: /appview/</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>Disallow: /login</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>Disallow: /logout</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>Disallow: /resetpassword</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>Disallow: /terms</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>Disallow: /search</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>Allow: /search-special</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>Disallow: /notifications</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>Disallow: /settings</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>Disallow: /inbox</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>Disallow: /admin_inbox</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>Disallow: /*?guide*</pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>User-agent: Baiduspider-image</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>Disallow: /appview/</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>Disallow: /login</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>Disallow: /logout</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>Disallow: /resetpassword</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>Disallow: /terms</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>Disallow: /search</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>Allow: /search-special</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>Disallow: /notifications</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>Disallow: /settings</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>Disallow: /inbox</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>Disallow: /admin_inbox</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>Disallow: /*?guide*</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>User-agent: bingbot</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>Disallow: /appview/</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>Disallow: /login</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>Disallow: /logout</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>Disallow: /resetpassword</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>Disallow: /terms</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>Disallow: /search</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>Allow: /search-special</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>Disallow: /notifications</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>Disallow: /settings</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>Disallow: /inbox</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>Disallow: /admin_inbox</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>Disallow: /*?guide*</pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>User-Agent: *</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>Disallow: /</pre></td></tr></table></figure><p>user-agent 这句代码表示那个搜索引擎准守协议。user-agent 后面为搜索机器人名称，如果是 “*” 号，则泛指所有的搜索引擎机器人；案例中显示 “User-agent: *” 表示所有搜索引擎准守，* 号表示所有。</p>\n<p>Disallow 是禁止爬取的意思。Disallow 后面是不允许访问文件目录（你可以理解为路径中包含改字符、都不会爬取）。案例中显示 “Disallow: /?s*” 表示路径中带有 “/?s” 的路径都不能爬取。 * 代表匹配所有。 这里需要主机。 Disallow 空格一个，/ 必须为开头。</p>\n<p>如果 “Disallow: /” 因为所有路径都包含 / ，所以这表示禁止爬取网站所有内容。</p>\n<p><font style=\"color:red\">如果没有被禁止到的路径，默认为可以被爬取。</font></p>\n<h5 id=\"关于robots的注意事项\"><a class=\"markdownIt-Anchor\" href=\"#关于robots的注意事项\">#</a> 关于 robots 的注意事项</h5>\n<ol>\n<li>\n<p>不要禁止爬虫爬取网站的所有，因为从经验来看，如果屏蔽一次，解封后好一段时间爬虫都不会来你网站，收录成为问题。</p>\n</li>\n<li>\n<p>代码后需要【冒号 + 空格 + 斜杆】 ，比如 “Disallow: /<em>?</em> ”</p>\n</li>\n<li>\n<p>当网站为静态路径时，需要屏蔽掉所有动态链接。网站中存在一种链接被收录即可，避免一个页面 2 个链接。代码如下 “Disallow: /<em>?</em> ” 表示禁止所有带？号的网址被爬取。通常动态网址带有 “?”“=” 等。</p>\n</li>\n<li>\n<p>根据自己网站情况定，屏蔽不需要收录的网址。</p>\n</li>\n</ol>\n<h3 id=\"三-爬虫语言的选择\"><a class=\"markdownIt-Anchor\" href=\"#三-爬虫语言的选择\">#</a> 三、爬虫语言的选择</h3>\n<p>很多人提到爬虫就会想到 Python，其实除了 Python，其他的语言诸如 C，PHP，Java 等等都可以写爬虫，而且一般来说这些语言的执行效率还要比 Python 要高，但为什么目前来说，Python 渐渐成为了写很多人写爬虫的第一选择，简单总结了以下几点：</p>\n<ul>\n<li>\n<p><em><strong>开发效率高</strong></em>，代码简洁，一行代码就可完成请求，100 行可以完成一个复杂的爬虫任务；</p>\n</li>\n<li>\n<p><em><strong>爬虫对于代码执行效率要求不高</strong></em>，网站 IO 才是最影响爬虫效率的。如一个网页请求可能需要 100ms，数据处理 10ms 还是 1ms 影响不大；</p>\n</li>\n<li>\n<p><em><strong>非常多优秀的第三方库</strong></em>，如 requests，beautifulsoup，selenium 等等；</p>\n</li>\n</ul>\n<h3 id=\"四-http请求类型\"><a class=\"markdownIt-Anchor\" href=\"#四-http请求类型\">#</a> 四、HTTP 请求类型</h3>\n<p>根据 HTTP 标准，HTTP 请求可以使用多种请求方法。</p>\n<p><strong>HTTP1.0 定义了三种请求方法</strong>： GET, POST 和 HEAD 方法。</p>\n<p><strong>HTTP1.1 新增了六种请求方法</strong>：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。</p>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><strong>GET</strong></td>\n<td>请求指定的页面信息，并返回实体主体。</td>\n</tr>\n<tr>\n<td>2</td>\n<td>HEAD</td>\n<td>类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头</td>\n</tr>\n<tr>\n<td>3</td>\n<td><strong>POST</strong></td>\n<td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和 / 或已有资源的修改。</td>\n</tr>\n<tr>\n<td>4</td>\n<td>PUT</td>\n<td>从客户端向服务器传送的数据取代指定的文档的内容。</td>\n</tr>\n<tr>\n<td>5</td>\n<td>DELETE</td>\n<td>请求服务器删除指定的页面。</td>\n</tr>\n<tr>\n<td>6</td>\n<td>CONNECT</td>\n<td>HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。</td>\n</tr>\n<tr>\n<td>7</td>\n<td>OPTIONS</td>\n<td>允许客户端查看服务器的性能。</td>\n</tr>\n<tr>\n<td>8</td>\n<td>TRACE</td>\n<td>回显服务器收到的请求，主要用于测试或诊断。</td>\n</tr>\n<tr>\n<td>9</td>\n<td>PATCH</td>\n<td>是对 PUT 方法的补充，用来对已知资源进行局部更新 。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"五-http-状态码\"><a class=\"markdownIt-Anchor\" href=\"#五-http-状态码\">#</a> 五、HTTP 状态码</h3>\n<ul>\n<li>200 - 请求成功</li>\n<li>301 - 资源（网页等）被永久转移到其它 URL</li>\n<li>404 - 请求的资源（网页等）不存在</li>\n<li>500 - 内部服务器错误</li>\n</ul>\n<p><strong>所有的状态代码的取值一般在 100-599 之间，超出这个范围的响应状态码就不是标准的状态响应码了。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHBzJTNBLy9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9TdGF0dXM=\">所有的状态码</span>可以分成 5 类：</strong></p>\n<ul>\n<li>100–199：信息反馈（Informational responses）；</li>\n<li>200–299：成功反馈（Successful responses），上面的代码的 200 status code 就属于这里；</li>\n<li>300–399：重定向消息（Redirection messages）；</li>\n<li>400–499：客户端错误响应（Client error responses），这个区间包含了我们常见的 403 和 404 错误响应码</li>\n<li>500–599：服务器错误响应（Server error responses）</li>\n</ul>\n<h3 id=\"六-requests-中-get-与-post-的-headers-参数\"><a class=\"markdownIt-Anchor\" href=\"#六-requests-中-get-与-post-的-headers-参数\">#</a> 六、requests 中 get 与 post 的 headers 参数</h3>\n<p>在编写爬虫的过程中，有些网站会设置反爬机制，对不是来源于浏览器的访问进行拒绝，此时我们会收到 403 错误响应码，或者收到 “抱歉，无法访问 “等字眼，这就需要在爬虫程序中修改请求的 headers 伪装浏览器访问，从而绕开网站的反爬机制获取正确的页面。</p>\n<h5 id=\"1了解-requests-中-get-与-post-的-headers-参数\"><a class=\"markdownIt-Anchor\" href=\"#1了解-requests-中-get-与-post-的-headers-参数\">#</a> 1. 了解 requests 中 get 与 post 的 headers 参数</h5>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  \"headers\": &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \"Accept\": \"*/*\", </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \"Accept-Encoding\": \"gzip, deflate\", </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \"Host\": \"httpbin.org\", </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    \"User-Agent\": \"python-requests/2.31.0\", </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    \"X-Amzn-Trace-Id\": \"Root=1-65373fd4-71bd6a663234e7c4749aa450\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  &#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125;</pre></td></tr></table></figure><p class=\"note note-success\">User-Agent: 用户代理（英语：User Agent）指的是代表用户行为的软件代理程序所提供的对自己的一个标识符。用于标识浏览器类型及版本、操作系统及版本、浏览器内核、等信息的标识</p>\n<p>我们直接用 request 包，上来就调用 get 或者 post 方法，对方的服务器会根据我们发送的 **“User-Agent”: “python-requests/2.31.0”** 了解到，你是用 python 调用的 request 包来访问他们的服务器的。由于这种行为仅仅是消耗服务器资源带来成本，但是不会给对方带来任何好处（搜索引擎的爬虫除外），所以有一些网站会加入反爬机制，通过识别 headers 来拒绝对你的请求进行响应。</p>\n<p><font style='color:red'>因此，我们需要在发送的请求中加入自定义的 headers，将我们的请求伪装成利用浏览器进行的请求。</font></p>\n<h5 id=\"2查看浏览器headers的常用方法\"><a class=\"markdownIt-Anchor\" href=\"#2查看浏览器headers的常用方法\">#</a> 2. 查看浏览器 headers 的常用方法</h5>\n<p>在浏览器的网页上：F12 打开检查 ——&gt; Network ——&gt; Doc ——&gt; 在 Name 里找到对应的请求文件 ——&gt; 在右边选择标头 标签页，找到 “请求标头”，就可以看到我们发送给服务器的 headers。</p>\n<img data-src='https://note.youdao.com/yws/api/personal/file/WEB0ac4a14cf94a00e27fc74a8ca69b6de8?method=download&shareKey=5942d087f7e28642d8ef3cb59bc1b2e1'>\n<p>同理，服务器在发给我们信息的时候，也会发送 Headers。我们同样在上面的选择路径，可以看到 “Response Headers”。</p>\n<img data-src='https://note.youdao.com/yws/api/personal/file/WEBa24eee38235b2443609b6227b8e57e22?method=download&shareKey=23a40e0611844ba2d9c900dad3abcaf7'>\n<p>我们可以查看到服务器响应返回的头信息知道响应结果的编码是 utf-8，有的还可以看到服务器所用是 apache 或是其他 web 服务器。</p>\n<h5 id=\"3headers-的解读\"><a class=\"markdownIt-Anchor\" href=\"#3headers-的解读\">#</a> 3.Headers 的解读</h5>\n<ol>\n<li>User-Agent 的格式解读</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.61</pre></td></tr></table></figure><ul>\n<li>Mozilla/5.0 (WindowsNT 10.0; Win64; x64)：表示代理服务器的操作系统和版本。这里表示代理服务器是在 Windows 10 64 位操作系统上运行的。</li>\n<li>AppleWebKit/537.36 (KHTML, like Gecko)：表示代理服务器使用的浏览器引擎。这里表示代理服务器使用的是 AppleWebKit 引擎，它是一个开源的浏览器引擎，类似于 Gecko 引擎。</li>\n<li>Chrome/118.0.0.0 Safari/537.36：表示代理服务器使用的浏览器版本。这里表示代理服务器使用的是 Chrome 浏览器版本 118.0.0.0，以及 Safari 浏览器版本 537.36。</li>\n<li>Edg/118.0.2088.61：表示代理服务器使用的 Edge 浏览器版本。这里表示代理服务器使用的是 Edge 浏览器版本 118.0.2088.61。</li>\n</ul>\n<ol start=\"2\">\n<li>Cookie</li>\n</ol>\n<p>cookie，有时也用其复数形式 Cookies。类型为 “<strong>小型文本文件</strong>”，是某些网站为了辨别用户身份，进行 Session 跟踪而储存在用户本地终端上的数据（通常经过加密），由用户客户端计算机暂时或永久保存的信息 。具体信息见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9DT09LSUUvMTExOQ==\"> cookies 百度百科</span>。</p>\n<p><a href=\"/2023/10/24/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%EF%BC%88%E4%BA%8C%EF%BC%89/\" style=\"display: block;text-align: right;\">转到 Python 网络爬虫（二）</a></p>\n",
            "tags": [
                "Python",
                "爬虫"
            ]
        },
        {
            "id": "http://example.com/2023/10/13/fluid%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",
            "url": "http://example.com/2023/10/13/fluid%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",
            "title": "fluid使用指南",
            "date_published": "2023-10-13T07:17:59.000Z",
            "content_html": "<h3 id=\"1文章中使用主题内置的便签\"><a class=\"markdownIt-Anchor\" href=\"#1文章中使用主题内置的便签\">#</a> 1. 文章中使用主题内置的便签</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>note note-primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>标签<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>使用效果图如下：</p>\n<p><img data-src=\"https://note.youdao.com/yws/api/personal/file/WEBaefe0d8151326e6297d0a1c2604201a5?method=download&amp;shareKey=e76161d555ba41618cd18f07fda59b2e\" alt=\"效果图\"></p>\n<h3 id=\"2文章中链接其它文章\"><a class=\"markdownIt-Anchor\" href=\"#2文章中链接其它文章\">#</a> 2. 文章中链接其它文章</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline<span class=\"token punctuation\">;</span><span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>转到【文章名】<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>示例：<a href=\"/2023/10/08/md%E8%AF%AD%E6%B3%95/\" style=\"display: inline;white-space: nowrap;\">转到【md 语法】</a></p>\n<h3 id=\"3摘要的处理\"><a class=\"markdownIt-Anchor\" href=\"#3摘要的处理\">#</a> 3. 摘要的处理</h3>\n<p>手动指定摘要，使用  <code>&lt;!-- more --&gt;</code>  MD 文档里划分，如：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>正文的一部分作为摘要</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- more --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>余下的正文</pre></td></tr></table></figure><p>或者在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvZnJvbnQtbWF0dGVy\">front-matter (opens new window)</span> 里设置  <code>excerpt</code>  字段，如：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 这是标题</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">excerpt</span><span class=\"token punctuation\">:</span> 这是摘要</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p class=\"note note-primary\">Tips:<br>\n    优先级: 手动摘要 > 自动摘要<br>\n    如果关闭自动摘要，并且没有设置手动摘要，摘要区域空白<br>\n    无论哪种摘要都最多显示 3 行，当屏幕宽度不足时会隐藏部分摘要。</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/10/08/md%E8%AF%AD%E6%B3%95/",
            "url": "http://example.com/2023/10/08/md%E8%AF%AD%E6%B3%95/",
            "title": "Markdown模版",
            "date_published": "2023-10-08T09:47:18.000Z",
            "content_html": "<h3 id=\"一-markdown标题语法\"><a class=\"markdownIt-Anchor\" href=\"#一-markdown标题语法\">#</a> 一、Markdown 标题语法</h3>\n<p>要创建标题，请在单词或短语前面添加井号 ( <code>#</code> ) 。 <code>#</code>  的数量代表了标题的级别。例如，添加三个  <code>#</code>  表示创建一个三级标题</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Markdown 语法</th>\n<th>HTML</th>\n<th>预览效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"># Heading level 1</td>\n<td><code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code></td>\n<td>Heading  level 1</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"可选语法\"><a class=\"markdownIt-Anchor\" href=\"#可选语法\">#</a> 可选语法：</h5>\n<p>还可以在文本下方添加任意数量的 == 号来标识一级标题，或者 – 号来标识二级标题。</p>\n<h3 id=\"二-markdown段落语法\"><a class=\"markdownIt-Anchor\" href=\"#二-markdown段落语法\">#</a> 二、Markdown 段落语法</h3>\n<p>​\t要创建段落，请使用空白行将一行或多行文本进行分隔。</p>\n<table>\n<thead>\n<tr>\n<th>Markdown 语法</th>\n<th>HTML</th>\n<th>预览效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>I really like using Markdown.I think I'll use it to format all of my documents from now on.</code></td>\n<td><code>&lt;p&gt;I really like using Markdown.&lt;/p&gt;&lt;p&gt;I think I'll use it to format all of my documents from now on.&lt;/p&gt;</code></td>\n<td>I really like using Markdown.                       I think I’ll use it to format all of my documents from now on</td>\n</tr>\n</tbody>\n</table>\n<p><font style=\"color:red\"><strong>不要用空格（spaces）或制表符（ tabs）缩进段落</strong></font></p>\n<h3 id=\"三-markdown换行语法\"><a class=\"markdownIt-Anchor\" href=\"#三-markdown换行语法\">#</a> 三、Markdown 换行语法</h3>\n<p>在一行的末尾添加两个或多个空格，然后按回车键，即可创建一个换行 ( <code>&lt;br&gt;</code> )</p>\n<table>\n<thead>\n<tr>\n<th>Markdown 语法</th>\n<th>HTML</th>\n<th>预览效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>This is the first line.  And this is the second line.</code></td>\n<td><code>&lt;p&gt;This is the first line.&lt;br&gt;And this is the second line.&lt;/p&gt;</code></td>\n<td>This is the first line. And this is the second line.</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"换行line-break用法的最佳实践\"><a class=\"markdownIt-Anchor\" href=\"#换行line-break用法的最佳实践\">#</a> 换行（Line Break）用法的最佳实践：</h5>\n<p>几乎每个 Markdown 应用程序都支持两个或多个空格进行换行，称为  <code>结尾空格（trailing whitespace)</code>  的方式，但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。幸运的是，几乎每个 Markdown 应用程序都支持另一种换行方式：HTML 的  <code>&lt;br&gt;</code>  标签。</p>\n<p>为了兼容性，请在行尾添加 “结尾空格” 或 HTML 的  <code>&lt;br&gt;</code>  标签来实现换行。</p>\n<h3 id=\"四-markdown强调语法\"><a class=\"markdownIt-Anchor\" href=\"#四-markdown强调语法\">#</a> 四、Markdown 强调语法</h3>\n<p>通过将文本设置为粗体或斜体来强调其重要性。</p>\n<h5 id=\"粗体bold\"><a class=\"markdownIt-Anchor\" href=\"#粗体bold\">#</a> 粗体（Bold）：</h5>\n<p>要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（不推荐使用）（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。</p>\n<table>\n<thead>\n<tr>\n<th>Markdown 语法</th>\n<th>HTML</th>\n<th>预览效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>I just love **bold text**.</code></td>\n<td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td>\n<td>I just love <strong>bold text</strong>.</td>\n</tr>\n<tr>\n<td><code>I just love __bold text__.</code></td>\n<td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td>\n<td>I just love <strong>bold text</strong>.</td>\n</tr>\n<tr>\n<td><code>Love**is**bold</code></td>\n<td><code>Love&lt;strong&gt;is&lt;/strong&gt;bold</code></td>\n<td>Love<strong>is</strong>bold</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"斜体italic\"><a class=\"markdownIt-Anchor\" href=\"#斜体italic\">#</a> 斜体（Italic）：</h5>\n<p>要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p>\n<table>\n<thead>\n<tr>\n<th>Markdown 语法</th>\n<th>HTML</th>\n<th>预览效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Italicized text is the *cat's meow*.</code></td>\n<td><code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code></td>\n<td>Italicized text is the <em>cat’s meow</em>.</td>\n</tr>\n<tr>\n<td><code>Italicized text is the _cat's meow_.</code></td>\n<td><code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code></td>\n<td>Italicized text is the <em>cat’s meow</em>.</td>\n</tr>\n<tr>\n<td><code>A*cat*meow</code></td>\n<td><code>A&lt;em&gt;cat&lt;/em&gt;meow</code></td>\n<td>A<em>cat</em>meow</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"斜体italic用法的最佳实践\"><a class=\"markdownIt-Anchor\" href=\"#斜体italic用法的最佳实践\">#</a> 斜体（Italic）用法的最佳实践 ：</h5>\n<p><em><strong>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</strong></em></p>\n<h5 id=\"删除线\"><a class=\"markdownIt-Anchor\" href=\"#删除线\">#</a> 删除线:</h5>\n<p>您可以通过在单词中心放置一条水平线来删除单词。结果看起来像这样。此功能使您可以指示某些单词是一个错误，要从文档中删除。若要删除单词，请在单词前后使用两个波浪号 <code>~~</code> 。</p>\n<p>示例入下：</p>\n<p><s>删除线</s></p>\n<h3 id=\"五-markdown引用语法\"><a class=\"markdownIt-Anchor\" href=\"#五-markdown引用语法\">#</a> 五、Markdown 引用语法</h3>\n<p>要创建块引用，请在段落前添加一个  <code>&gt;</code>  符号</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>>这是一个引用语句</pre></td></tr></table></figure><p>效果如下：</p>\n<blockquote>\n<p>这是一个引用语句；</p>\n</blockquote>\n<h5 id=\"多个段落的块引用\"><a class=\"markdownIt-Anchor\" href=\"#多个段落的块引用\">#</a> 多个段落的块引用：</h5>\n<p>块引用可以包含多个段落。为段落之间的空白行添加一个  <code>&gt;</code>  符号。</p>\n<blockquote>\n<p>段落一；</p>\n<p>段落二；</p>\n</blockquote>\n<h5 id=\"嵌套块引用\"><a class=\"markdownIt-Anchor\" href=\"#嵌套块引用\">#</a> 嵌套块引用：</h5>\n<p>块引用可以嵌套。在要嵌套的段落前添加一个  <code>&gt;&gt;</code>  符号。</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>> 段落一;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>>> 嵌套段落二;</pre></td></tr></table></figure><p>效果如下：</p>\n<blockquote>\n<p>段落一；</p>\n<blockquote>\n<p>段落二；</p>\n</blockquote>\n</blockquote>\n<h5 id=\"带有其它元素的块引用\"><a class=\"markdownIt-Anchor\" href=\"#带有其它元素的块引用\">#</a> 带有其它元素的块引用：</h5>\n<p>块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。</p>\n<p>可以使用的元素如下（后续如有还会补充）</p>\n<blockquote>\n<p><em>斜体</em></p>\n<p><strong>粗体</strong></p>\n<p><em><strong>粗斜体</strong></em></p>\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2</li>\n</ul>\n</blockquote>\n<h3 id=\"六-markdown列表语法\"><a class=\"markdownIt-Anchor\" href=\"#六-markdown列表语法\">#</a> 六、Markdown 列表语法</h3>\n<p><font style=\"color:red\">可以将多个条目组织成有序或无序列表。</font></p>\n<h5 id=\"有序列表\"><a class=\"markdownIt-Anchor\" href=\"#有序列表\">#</a> 有序列表：</h5>\n<p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。</p>\n<table>\n<thead>\n<tr>\n<th>Markdown 语法</th>\n<th>HTML</th>\n<th>预览效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>1. First item2. Second item3. Third item4. Fourth item</code></td>\n<td><code>&lt;ol&gt;&lt;li&gt;First item&lt;/li&gt;&lt;li&gt;Second item&lt;/li&gt;&lt;li&gt;Third item&lt;/li&gt;&lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td>\n<td>First itemSecond itemThird itemFourth item</td>\n</tr>\n</tbody>\n</table>\n<p>如下所示</p>\n<ol>\n<li>有序列表 1</li>\n<li>有序列表 2</li>\n<li>有序列表 3</li>\n</ol>\n<h5 id=\"无序列表\"><a class=\"markdownIt-Anchor\" href=\"#无序列表\">#</a> 无序列表：</h5>\n<p>要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。</p>\n<ul>\n<li>\n<p>无序列表 1</p>\n<ul>\n<li>无序列表 1.1</li>\n<li>无序列表 1.2</li>\n</ul>\n</li>\n<li>\n<p>无序列表 2</p>\n</li>\n</ul>\n<h5 id=\"在列表中嵌套其他元素\"><a class=\"markdownIt-Anchor\" href=\"#在列表中嵌套其他元素\">#</a> 在列表中嵌套其他元素：</h5>\n<p>要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符，如下例所示：</p>\n<ol>\n<li>有序列表 1\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2</li>\n</ul>\n</li>\n<li>有序列表 2</li>\n</ol>\n<h3 id=\"七-markdown代码语法\"><a class=\"markdownIt-Anchor\" href=\"#七-markdown代码语法\">#</a> 七、Markdown 代码语法</h3>\n<p>要将单词或短语表示为代码，请将其包裹在反引号 (``) 中。</p>\n<table>\n<thead>\n<tr>\n<th>Markdown 语法</th>\n<th>HTML</th>\n<th>预览效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>At the command prompt, type </code> nano <code>.</code></td>\n<td><code>At the command prompt, type &lt;code&gt;nano&lt;/code&gt;.</code></td>\n<td>At the command prompt, type  <code>nano</code> .</td>\n</tr>\n</tbody>\n</table>\n<p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号 (````) 中。</p>\n<table>\n<thead>\n<tr>\n<th>Markdown 语法</th>\n<th>HTML</th>\n<th>预览效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Use `code` in your Markdown file.</code></td>\n<td><code>&lt;code&gt;Use </code> code <code> in your Markdown file.&lt;/code&gt;</code></td>\n<td><code>Use </code> code <code> in your Markdown file.</code></td>\n</tr>\n</tbody>\n</table>\n<p><code>这是一段代码！！！！</code></p>\n<h5 id=\"markdown-围栏代码块\"><a class=\"markdownIt-Anchor\" href=\"#markdown-围栏代码块\">#</a> Markdown 围栏代码块:</h5>\n<p>Markdown 基本语法允许您通过将行缩进四个空格或一个制表符来创建代码块。如果发现不方便，请尝试使用受保护的代码块。根据 Markdown 处理器或编辑器的不同，您将在代码块之前和之后的行上使用三个反引号（(`````）或三个波浪号（~~~）。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>这个是一个代码块</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    hello world！！！</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">return</span></pre></td></tr></table></figure><h5 id=\"语法高亮\"><a class=\"markdownIt-Anchor\" href=\"#语法高亮\">#</a> 语法高亮：</h5>\n<p>许多 Markdown 处理器都支持受围栏代码块的语法突出显示。使用此功能，您可以为编写代码的任何语言添加颜色突出显示。要添加语法突出显示，请在<font style=\"color:red\">受防护的代码块之前的反引号旁边指定一种语言。</font></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>```json</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"firstName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"lastName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Smith\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">25</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>```</pre></td></tr></table></figure><h3 id=\"八-markdown分隔线语法\"><a class=\"markdownIt-Anchor\" href=\"#八-markdown分隔线语法\">#</a> 八、 Markdown 分隔线语法</h3>\n<p>要创建分隔线，请在单独一行上使用三个或多个星号 ( <code>***</code> )、破折号 ( <code>---</code> ) 或下划线 ( <code>___</code> ) ，并且不能包含其他内容。</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>***</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>_________________</pre></td></tr></table></figure><p>如下图所示：</p>\n<hr>\n<h5 id=\"分隔线horizontal-rule用法最佳实践\"><a class=\"markdownIt-Anchor\" href=\"#分隔线horizontal-rule用法最佳实践\">#</a> 分隔线（Horizontal Rule）用法最佳实践</h5>\n<p><font style=\"color:red\">为了兼容性，请在分隔线的前后均添加空白行。</font></p>\n<h3 id=\"九-markdown链接语法\"><a class=\"markdownIt-Anchor\" href=\"#九-markdown链接语法\">#</a> 九、Markdown 链接语法</h3>\n<p>链接文本放在中括号内，链接地址放在后面的括号中，链接 title 可选。</p>\n<p>超链接 Markdown 语法代码： <code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code></p>\n<p>对应的 HTML 代码： <code>&lt;a href=&quot;超链接地址&quot; title=&quot;超链接title&quot;&gt;超链接显示名&lt;/a&gt;</code></p>\n<p>示例：</p>\n<p>这是一个 Markdown 语法链接<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZG93bi5jb20uY24=\"> Markdown 官方教程</span>。</p>\n<p>这是一个 HTML 语法链接<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZG93bi5jb20uY24=\">Markdown 官方教程</span>。</p>\n<h5 id=\"给链接增加-title\"><a class=\"markdownIt-Anchor\" href=\"#给链接增加-title\">#</a> 给链接增加 Title:</h5>\n<p>链接 title 是当鼠标悬停在链接上时会出现的文字，这个 title 是可选的，内容添加引号 <code>&quot;&quot;</code>  放在圆括号中链接地址后面，跟链接地址之间以空格分隔。</p>\n<p>这是一个 Markdown 语法链接<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZG93bi5jb20uY24=\"> Markdown 官方教程</span>。</p>\n<p>这是一个 HTML 语法链接<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZG93bi5jb20uY24=\">Markdown 官方教程</span>。</p>\n<h5 id=\"网址和email地址\"><a class=\"markdownIt-Anchor\" href=\"#网址和email地址\">#</a> 网址和 Email 地址:</h5>\n<p>使用尖括号可以很方便地把 URL 或者 email 地址变成可点击的链接。</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;https://markdown.com.cn></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZG93bi5jb20uY24=\">https://markdown.com.cn</span></p>\n<h5 id=\"引用类型链接一般用不到\"><a class=\"markdownIt-Anchor\" href=\"#引用类型链接一般用不到\">#</a> 引用类型链接:[一般用不到]</h5>\n<p>引用样式链接是一种特殊的链接，它使 URL 在 Markdown 中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。</p>\n<h6 id=\"链接的第一部分格式\"><a class=\"markdownIt-Anchor\" href=\"#链接的第一部分格式\">#</a> 链接的第一部分格式</h6>\n<p>引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p>\n<p>尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。</p>\n<p>以下示例格式对于链接的第一部分效果相同：</p>\n<ul>\n<li><code>[hobbit-hole][1]</code></li>\n<li><code>[hobbit-hole] [1]</code></li>\n</ul>\n<h6 id=\"链接的第二部分格式\"><a class=\"markdownIt-Anchor\" href=\"#链接的第二部分格式\">#</a> 链接的第二部分格式</h6>\n<p>引用类型链接的第二部分使用以下属性设置格式：</p>\n<ol>\n<li>放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如 <code>[label]:</code> ）。</li>\n<li>链接的 URL，可以选择将其括在尖括号中。</li>\n<li>链接的可选标题，可以将其括在双引号，单引号或括号中。</li>\n</ol>\n<h3 id=\"十-markdown图片语法\"><a class=\"markdownIt-Anchor\" href=\"#十-markdown图片语法\">#</a> 十、Markdown 图片语法</h3>\n<p>要添加图像，请使用感叹号 ( <code>!</code> ), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p>\n<p>插入图片 Markdown 语法代码： <code>![图片alt](图片链接 &quot;图片title&quot;)</code> 。</p>\n<p>对应的 HTML 代码： <code>&lt;img src=&quot;图片链接&quot; alt=&quot;图片alt&quot; title=&quot;图片title&quot;&gt;</code></p>\n<p><img data-src=\"/img/avatar.png\" alt=\"\"></p>\n<h5 id=\"链接图片\"><a class=\"markdownIt-Anchor\" href=\"#链接图片\">#</a> 链接图片：</h5>\n<p>给图片增加链接，请将图像的 Markdown 括在方括号中，然后将链接添加在圆括号中。</p>\n<p><a href=\"https://markdown.com.cn\"><img data-src=\"/img/avatar.png\" alt=\"我的头像\"></a></p>\n<h3 id=\"十一-markdown转义字符语法\"><a class=\"markdownIt-Anchor\" href=\"#十一-markdown转义字符语法\">#</a> 十一、Markdown 转义字符语法</h3>\n<p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \\ 。</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>\\* Without the backslash, this would be a bullet in an unordered list.</pre></td></tr></table></figure><p>渲染效果如下：</p>\n<p>* Without the backslash, this would be a bullet in an unordered list.</p>\n<h5 id=\"特殊字符自动转义\"><a class=\"markdownIt-Anchor\" href=\"#特殊字符自动转义\">#</a> 特殊字符自动转义:</h5>\n<p>在 HTML 文件中，有两个字符需要特殊处理：  <code>&lt;</code>  和  <code>&amp;</code>  。  <code>&lt;</code>  符号用于起始标签， <code>&amp;</code>  符号则用于标记 HTML 实体，如果你只是想要使用这些符号，你必须要使用实体的形式，像是  <code>&lt;</code>  和  <code>&amp;</code> 。Markdown 允许你直接使用这些符号，它帮你自动转义字符。如果你使用  <code>&amp;</code>  符号的作为 HTML 实体的一部分，那么它不会被转换，而在其它情况下，它则会被转换成  <code>&amp;</code> 。</p>\n<h3 id=\"十二-内嵌-html-标签\"><a class=\"markdownIt-Anchor\" href=\"#十二-内嵌-html-标签\">#</a> 十二、内嵌 HTML 标签</h3>\n<p>对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。</p>\n<h5 id=\"行级內联标签\"><a class=\"markdownIt-Anchor\" href=\"#行级內联标签\">#</a> 行级內联标签:</h5>\n<p>HTML 的行级內联标签如  <code>&lt;span&gt;</code> 、 <code>&lt;cite&gt;</code> 、 <code>&lt;del&gt;</code>  不受限制，可以在 Markdown 的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用 Markdown 格式，而采用 HTML 标签来格式化。例如：如果比较喜欢 HTML 的  <code>&lt;a&gt;</code>  或  <code>&lt;img&gt;</code>  标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用 HTML 标签更方便些。</p>\n<p>HTML 行级內联标签和区块标签不同，在內联标签的范围内， Markdown 的语法是可以解析的。</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>This **word** is bold. This &lt;em>word&lt;/em> is italic.</pre></td></tr></table></figure><p>渲染效果如下:</p>\n<p>This <strong>word</strong> is bold. This <em>word</em> is italic.</p>\n<h5 id=\"区块标签\"><a class=\"markdownIt-Anchor\" href=\"#区块标签\">#</a> 区块标签:</h5>\n<p>区块元素──比如  <code>&lt;div&gt;</code> 、 <code>&lt;table&gt;</code> 、 <code>&lt;pre&gt;</code> 、 <code>&lt;p&gt;</code>  等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 会自动识别这区块元素，避免在区块标签前后加上没有必要的  <code>&lt;p&gt;</code>  标签。</p>\n<p>例如，在 Markdown 文件里加上一段 HTML 表格：</p>\n<pre><code>This is a regular paragraph.\n\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Foo&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\nThis is another regular paragraph.\n</code></pre>\n<p>请注意，Markdown 语法在 HTML 区块标签中将不会被进行处理。例如，你无法在 HTML 区块内使用 Markdown 形式的 <code>*强调*</code> 。</p>\n<h5 id=\"html-用法最佳实践\"><a class=\"markdownIt-Anchor\" href=\"#html-用法最佳实践\">#</a> HTML 用法最佳实践：</h5>\n<p>出于安全原因，并非所有 Markdown 应用程序都支持在 Markdown 文档中添加 HTML。如有疑问，请查看相应 Markdown 应用程序的手册。某些应用程序只支持 HTML 标签的子集。</p>\n<p>对于 HTML 的块级元素  <code>&lt;div&gt;</code> 、 <code>&lt;table&gt;</code> 、 <code>&lt;pre&gt;</code>  和  <code>&lt;p&gt;</code> ，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对 HTML 标签做缩进，否则将影响格式。</p>\n<p><font style=\"color:red\">在 HTML 块级标签内不能使用 Markdown 语法。例如  <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code>  将不起作用。</font></p>\n<h3 id=\"十三-markdown表格使用markdown软件-直接添加表格内容\"><a class=\"markdownIt-Anchor\" href=\"#十三-markdown表格使用markdown软件-直接添加表格内容\">#</a> 十三、Markdown 表格（使用 Markdown 软件 直接添加表格内容）</h3>\n<p>要添加表，请使用三个或多个连字符（ <code>---</code> ）创建每列的标题，并使用管道（ <code>|</code> ）分隔每列。您可以选择在表的任一端添加管道。对齐</p>\n<p>您可以通过在标题行中的连字符的左侧，右侧或两侧添加冒号（ <code>:</code> ），将列中的文本对齐到左侧，右侧或中心。</p>\n<p>您可以在表格中设置文本格式。例如，您可以添加链接，代码（仅反引号（```）中的单词或短语，而不是代码块）和强调。</p>\n<p>您不能添加标题，块引用，列表，水平规则，图像或 HTML 标签。</p>\n<h3 id=\"十四-markdown脚注\"><a class=\"markdownIt-Anchor\" href=\"#十四-markdown脚注\">#</a> <a href=\"1\">十四、Markdown 脚注</a></h3>\n<p><strong>脚注</strong>，又名<strong>注脚</strong>，是读书所做的笔录、见解、体会、看法、观点、心得、感想的总称。脚注分为：头注、侧注、后注、割注、分注。来自<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLWNuLyVFOCU4NCU5QSVFNiVCMyVBOA==\">维基百科</span></p>\n<p>脚注使您可以添加注释和参考，而不会使文档正文混乱。当您创建脚注时，带有脚注的上标数字会出现在您添加脚注参考的位置。读者可以单击链接以跳至页面底部的脚注内容。</p>\n<p>要创建脚注参考，请在方括号（ <code>[^1]</code> ）内添加插入符号和标识符。标识符可以是数字或单词，但不能包含空格或制表符。标识符仅将脚注参考与脚注本身相关联 - 在输出中，脚注按顺序编号。<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<p>在括号内使用另一个插入符号和数字添加脚注，并用冒号和文本（ <code>[^1]: My footnote.</code> ）。您不必在文档末尾添加脚注。您可以将它们放在除列表，块引号和表之类的其他元素之外的任何位置。[^2 文档中脚注]</p>\n<h3 id=\"十五-任务列表语法\"><a class=\"markdownIt-Anchor\" href=\"#十五-任务列表语法\">#</a> 十五、任务列表语法</h3>\n<p>任务列表使您可以创建带有复选框的项目列表。在支持任务列表的 Markdown 应用程序中，复选框将显示在内容旁边。要创建任务列表，请在任务列表项之前添加破折号 <code>-</code>  和方括号 <code>[ ]</code> ，并在 <code>[ ]</code>  前面加上空格。要选择一个复选框，请在方括号 <code>[x]</code>  之间添加 x 。</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> 大方</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> 帅气</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\"><label for=\"cbx_2\"> 多金</label></li>\n</ul>\n<h3 id=\"十六-使用-emoji-表情\"><a class=\"markdownIt-Anchor\" href=\"#十六-使用-emoji-表情\">#</a> 十六、使用 Emoji 表情</h3>\n<p>有两种方法可以将表情符号添加到 Markdown 文件中：将表情符号复制并粘贴到 Markdown 格式的文本中，或者键入<em> emoji shortcodes</em>。</p>\n<h5 id=\"复制和粘贴表情符号\"><a class=\"markdownIt-Anchor\" href=\"#复制和粘贴表情符号\">#</a> 复制和粘贴表情符号</h5>\n<p>在大多数情况下，您可以简单地从<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbW9qaXBlZGlhLm9yZy8=\"> Emojipedia</span> 等来源复制表情符号并将其粘贴到文档中。许多 Markdown 应用程序会自动以 Markdown 格式的文本显示表情符号。从 Markdown 应用程序导出的 HTML 和 PDF 文件应显示表情符号。</p>\n<p>🤣</p>\n<p><strong>Tip:</strong> 如果您使用的是静态网站生成器，请确保将 HTML 页面编码为 UTF-8。.</p>\n<h5 id=\"使用表情符号简码\"><a class=\"markdownIt-Anchor\" href=\"#使用表情符号简码\">#</a> 使用表情符号简码</h5>\n<p>一些 Markdown 应用程序允许您通过键入表情符号短代码来插入表情符号。这些以冒号开头和结尾，并包含表情符号的名称。</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>脚注 1：文档末脚注 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "笔记",
                "Markdown"
            ]
        }
    ]
}